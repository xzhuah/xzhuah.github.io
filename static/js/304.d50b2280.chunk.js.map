{"version":3,"file":"static/js/304.d50b2280.chunk.js","mappings":"oPASA,MAAMA,EAAgBC,IAAwC,IAAvC,GAACC,KAAOC,GAAyBF,EAEtD,MAAOG,EAAiBC,GAAsBC,EAAAA,SAAyB,KAIhEC,EAAOC,GAAYF,EAAAA,SAAe,KAEnC,mBAACG,EAAkB,qBAAEC,IAAwBC,EAAAA,EAAAA,OAE5CC,EAAaC,GAAkBP,EAAAA,SAAuB,GAiB7D,OAAOQ,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACb,GAAI,IAAIA,MAASC,EAAIa,SAAA,EAGjCC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,KAAMZ,EAAOa,QAASZ,EAASQ,UAC7CC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAAAL,UACTC,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,SAIbL,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAAAP,SAAET,KAEbU,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAAAP,SAAE,gBAAkBJ,IAS9BR,EAAgBoB,KAAI,CAACC,EAAKC,KAClBT,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAAAP,SAAcS,GAARC,OAGpB,EAGV,EAAepB,EAAAA,KAAWN,E","sources":["domain/gallery/GalleryWidget.tsx"],"sourcesContent":["// @flow\r\nimport * as React from 'react';\r\nimport {IconButton, Stack, StackProps} from \"@mui/material\";\r\nimport {Typography} from \"../../component/wrapper/MuiWrappers\";\r\nimport EmojiTextField from \"../../component/input/EmojiTextField\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport {useSubscriber} from \"../../context/websocket/WebsocketHook\";\r\n\r\ntype GalleryWidgetProps = {} & StackProps;\r\nconst GalleryWidget = ({sx, ...rest}: GalleryWidgetProps) => {\r\n\r\n  const [receivedMessage, setReceivedMessage] = React.useState<string[]>([]);\r\n  // useSocketText(\"receive_message\", (msg) => {\r\n  //   setReceivedMessage([...receivedMessage, msg]);\r\n  // });\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const {subScribeToChannel, unSubScribeToChannel} = useSubscriber();\r\n\r\n  const [onlineUsers, setOnlineUsers] = React.useState<number>(0);\r\n\r\n  // useSocketPb(\"onlineUser\", QueryCustomerResponse, (msg) => {\r\n  //   setOnlineUsers(msg.customers.length);\r\n  //   if (msg.customers.length > 0) {\r\n  //     print(\"online user\", msg.customers[msg.customers.length - 1]);\r\n  //   }\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   subScribeToChannel(SocketChannel.SYSTEM_STATUS);\r\n  //\r\n  //   return () => {\r\n  //     unSubScribeToChannel(SocketChannel.SYSTEM_STATUS);\r\n  //   }\r\n  // }, []);\r\n\r\n  return <Stack sx={{...sx}} {...rest}>\r\n\r\n\r\n    <EmojiTextField text={value} setText={setValue}>\r\n      <IconButton>\r\n        <SendIcon/>\r\n      </IconButton>\r\n    </EmojiTextField>\r\n\r\n    <Typography>{value}</Typography>\r\n\r\n    <Typography>{\"online user: \" + onlineUsers}</Typography>\r\n\r\n\r\n    {/*<textarea>*/}\r\n    {/*   */}\r\n    {/*  /!*My Favorite emoji is:*!/*/}\r\n    {/*  <Emoji unified=\"1f423\" size={25}/>*/}\r\n    {/*  </textarea>*/}\r\n\r\n    {receivedMessage.map((msg, index) => {\r\n      return <Typography key={index}>{msg}</Typography>\r\n    })}\r\n\r\n  </Stack>;\r\n};\r\n\r\nexport default React.memo(GalleryWidget);"],"names":["GalleryWidget","_ref","sx","rest","receivedMessage","setReceivedMessage","React","value","setValue","subScribeToChannel","unSubScribeToChannel","useSubscriber","onlineUsers","setOnlineUsers","_jsxs","Stack","children","_jsx","EmojiTextField","text","setText","IconButton","SendIcon","Typography","map","msg","index"],"sourceRoot":""}