{"version":3,"file":"static/js/120.5f8f597b.chunk.js","mappings":"mNAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,oYACD,Y,gFCQJ,MAiEA,EAjEsBC,IAQ4B,IAR3B,SACEC,EAAQ,UACRC,EAAS,UACTC,EAAS,WACTC,EAAU,SACVC,EAAQ,OACRC,EAASA,KAAA,CAAS,MACfC,GACgBP,EAG1C,OAAOQ,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,gBAAc,EAACC,UAAW,KAAOJ,EAAIF,SAAA,EACrDP,EAAAA,EAAAA,KAACc,EAAAA,EAAgB,CAACC,YAAYf,EAAAA,EAAAA,KAACgB,EAAAA,EAAc,IAAGT,UAC9CG,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACC,UAAW,MAAOC,eAAgB,SAAUC,WAAY,SAAUC,SAAU,EAC5EC,SAAU,OAAOf,SAAA,EAEtBG,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACC,UAAW,MAAOK,QAAS,EAAGJ,eAAgB,QAASK,GAC5D,CACEC,MAAO,CACLC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,UAGTvB,SAAA,CACEJ,GACDH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAU,CAACC,QAAS,QAAQzB,SAAEH,QAGjCJ,EAAAA,EAAAA,KAAC+B,EAAAA,GAAU,CAACC,QAAS,QACTX,SAAU,EACVY,UAAW,QAAQ1B,UAC7BP,EAAAA,EAAAA,KAACkC,EAAAA,GAAM,CAACF,QAAS,OACTG,KAAM,QACNC,kBAAgB,EAChBZ,GAAI,CACFa,WAAY,SACZlB,eAAgB,cAElBmB,QAAUC,IACRA,EAAMC,iBACNhC,EAAO+B,GAEPA,EAAME,iBAAiB,EACvBlC,SACQ,OAAdF,QAAoCqC,IAAdrC,GAAgD,IAArBA,EAAUsC,OAAgB,OAAStC,YAM9FK,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACC,UAAW,SAAUC,eAAgB,QAASc,UAAW,QACzDW,GAAI,EAAGC,aAAc,EAAEtC,SAAA,EAE5BP,EAAAA,EAAAA,KAAC+B,EAAAA,GAAU,CAACC,QAAS,QAAQzB,SAAED,IAG9BC,OAGO,E,eCnEd,MAAMuC,EAAsB5C,IAA0B,IAAD6C,EAAAC,EAAAC,EAAA,OAApBxC,GAAeP,EAC9C,MAAMgD,GAAgBC,EAAAA,EAAAA,GAAeC,EAAAA,IACrC,OAAO1C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAG,CAACpB,UAAW,QAASqB,OAAQ,EAAGC,YAAa,SAAUC,aAAc,SAAW/C,EAAIF,SAAA,EAC7FP,EAAAA,EAAAA,KAACyD,EAAa,CAACtD,UAASH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAiB,IAAGtD,UAAW,eACzCC,UAAkC,QAAzB0C,EAAe,OAAbG,QAAa,IAAbA,OAAa,EAAbA,EAAeS,gBAAQ,IAAAZ,EAAAA,EAAI,GACtCvC,OAAQA,MACNoD,EAAAA,EAAAA,IAAW,qBAAqB,EAElCtD,WAAY,wFAG3BN,EAAAA,EAAAA,KAACyD,EAAa,CAACtD,UAASH,EAAAA,EAAAA,KAAC6D,EAAY,IAAGzD,UAAW,WACpCI,OAAQA,MACNoD,EAAAA,EAAAA,IAAW,qBAAqB,EAElCvD,UAAW,IAAIyD,OAAyB,OAAlBZ,EAAyB,GAAKa,KAAKC,IAA6C,GAAT,QAAhChB,EAAc,OAAbE,QAAa,IAAbA,GAAuB,QAAVD,EAAbC,EAAeS,gBAAQ,IAAAV,OAAV,EAAbA,EAAyBN,cAAM,IAAAK,EAAAA,EAAI,GAAQ,KACzG1C,WAAY,qKAEvB,EAGR,EAAe2D,EAAAA,KAAWnB,E","sources":["../node_modules/@mui/icons-material/esm/Password.js","component/container/InfoAccordion.tsx","domain/account/component/UserCredentialPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2 17h20v2H2zm1.15-4.05L4 11.47l.85 1.48 1.3-.75-.85-1.48H7v-1.5H5.3l.85-1.47L4.85 7 4 8.47 3.15 7l-1.3.75.85 1.47H1v1.5h1.7l-.85 1.48zm6.7-.75 1.3.75.85-1.48.85 1.48 1.3-.75-.85-1.48H15v-1.5h-1.7l.85-1.47-1.3-.75L12 8.47 11.15 7l-1.3.75.85 1.47H9v1.5h1.7zM23 9.22h-1.7l.85-1.47-1.3-.75L20 8.47 19.15 7l-1.3.75.85 1.47H17v1.5h1.7l-.85 1.48 1.3.75.85-1.48.85 1.48 1.3-.75-.85-1.48H23z\"\n}), 'Password');","import {Accordion, AccordionProps, AccordionSummary, Stack} from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport React from \"react\";\r\nimport {Button, Typography} from \"../wrapper/MuiWrappers\";\r\n\r\ntype InfoAccordionProps = {\r\n  infoIcon: React.ReactNode,\r\n  infoTitle: string,\r\n  infoValue: string | null,\r\n  infoDetail: string,\r\n  onEdit?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void,\r\n} & AccordionProps;\r\n\r\n\r\nconst InfoAccordion = ({\r\n                         infoIcon,\r\n                         infoTitle,\r\n                         infoValue,\r\n                         infoDetail,\r\n                         children,\r\n                         onEdit = () => ({}),\r\n                         ...rest\r\n                       }: InfoAccordionProps) => {\r\n\r\n\r\n  return <Accordion disableGutters elevation={1} {...rest}>\r\n    <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n      <Stack direction={\"row\"} justifyContent={\"center\"} alignItems={\"center\"} flexGrow={1}\r\n             flexWrap={\"wrap\"}>\r\n\r\n        <Stack direction={\"row\"} spacing={1} justifyContent={\"start\"} sx={\r\n          {\r\n            width: {\r\n              xs: \"150px\",\r\n              sm: \"300px\",\r\n              md: \"400px\",\r\n              lg: \"600px\",\r\n              xl: \"500px\",\r\n            }\r\n          }\r\n        }>\r\n          {infoIcon}\r\n          <Typography variant={\"body1\"}>{infoTitle}</Typography>\r\n        </Stack>\r\n\r\n        <Typography variant={\"body1\"}\r\n                    flexGrow={1}\r\n                    textAlign={\"start\"}>\r\n          <Button variant={\"text\"}\r\n                  size={\"small\"}\r\n                  disableElevation\r\n                  sx={{\r\n                    whiteSpace: \"nowrap\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    onEdit(event);\r\n                    // prevent event bubbling\r\n                    event.stopPropagation();\r\n                  }}>\r\n            {(infoValue === null || infoValue === undefined || infoValue.length === 0) ? \"Edit\" : infoValue}\r\n          </Button>\r\n        </Typography>\r\n      </Stack>\r\n\r\n    </AccordionSummary>\r\n    <Stack direction={\"column\"} justifyContent={\"start\"} textAlign={\"start\"}\r\n           mx={3} marginBottom={2}>\r\n\r\n      <Typography variant={\"body1\"}>{infoDetail}</Typography>\r\n\r\n\r\n      {children}\r\n    </Stack>\r\n\r\n  </Accordion>;\r\n}\r\n\r\nexport default InfoAccordion;","import {Box, BoxProps} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport PasswordIcon from '@mui/icons-material/Password';\r\nimport {useAppSelector} from \"../../../api/redux/hooks\";\r\nimport {selectLoginResponse} from \"../../../api/redux/slice/SettingSlice\";\r\nimport InfoAccordion from \"../../../component/container/InfoAccordion\";\r\nimport {openDialog} from \"../../../component/dialog/DialogManager\";\r\n\r\nconst UserCredentialPanel = ({...rest}: BoxProps) => {\r\n  const loginResponse = useAppSelector(selectLoginResponse);\r\n  return <Box textAlign={\"start\"} border={2} borderColor={\"silver\"} borderRadius={\"6px\"} {...rest}>\r\n    <InfoAccordion infoIcon=<AccountCircleIcon/> infoTitle={\"Account Name\"}\r\n                   infoValue={loginResponse?.username ?? \"\"}\r\n                   onEdit={() => {\r\n                     openDialog(\"EditUsernameDialog\");\r\n                   }}\r\n                   infoDetail={\"Account name is used for login to your account. You can edit it by clicking on it.\"}>\r\n    </InfoAccordion>\r\n\r\n    <InfoAccordion infoIcon=<PasswordIcon/> infoTitle={\"Password\"}\r\n                   onEdit={() => {\r\n                     openDialog(\"EditPasswordDialog\")\r\n                   }}\r\n                   infoValue={\"*\".repeat(loginResponse === null ? 10 : Math.min((loginResponse?.username?.length ?? 0) * 2, 12))}\r\n                   infoDetail={\"Your password is encrypted. You can edit it by clicking on it. Please provide recovery email so that we can help you recover your password when you forget it.\"}>\r\n    </InfoAccordion>\r\n  </Box>;\r\n}\r\n\r\nexport default React.memo(UserCredentialPanel);"],"names":["createSvgIcon","_jsx","d","_ref","infoIcon","infoTitle","infoValue","infoDetail","children","onEdit","rest","_jsxs","Accordion","disableGutters","elevation","AccordionSummary","expandIcon","ExpandMoreIcon","Stack","direction","justifyContent","alignItems","flexGrow","flexWrap","spacing","sx","width","xs","sm","md","lg","xl","Typography","variant","textAlign","Button","size","disableElevation","whiteSpace","onClick","event","preventDefault","stopPropagation","undefined","length","mx","marginBottom","UserCredentialPanel","_loginResponse$userna","_loginResponse$userna2","_loginResponse$userna3","loginResponse","useAppSelector","selectLoginResponse","Box","border","borderColor","borderRadius","InfoAccordion","AccountCircleIcon","username","openDialog","PasswordIcon","repeat","Math","min","React"],"sourceRoot":""}