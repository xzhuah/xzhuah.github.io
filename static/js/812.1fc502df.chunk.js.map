{"version":3,"file":"static/js/812.1fc502df.chunk.js","mappings":"mLASA,MA0BA,EA1B2BA,IAMiC,IANhC,QACEC,EAAU,EAAC,SACXC,EAAQ,eACRC,EAAiB,CAAC,EAAC,eACnBC,EAAiB,CAAC,KACfC,GACqBL,EACpD,OAAOM,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACbC,UAAW,CACTC,MAAO,CACLC,cACIJ,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,UAAW,MAAOC,WAAY,SAAUC,GAAI,CAACC,UAAW,YAAYb,SACxEA,OAGJC,MAEFC,GAELH,QAASA,EACTe,WAAS,EACTC,WAAS,KACLZ,GACN,C,kIChBJ,MAwCA,EAxCuBL,IAS6B,IAT5B,KACEkB,EAAI,QACJC,EAAO,MACPC,EAAc,YACdC,EAAc,iBAAgB,QAC9BC,EAAU,WAAU,QACpBrB,EAAU,EAAC,SACXC,KACGG,GACiBL,EAC5C,MAAOuB,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAkB,GAMhE,OACIC,EAAAA,EAAAA,MAACf,EAAAA,EAAK,CAACE,WAAY,MAAOc,MAAO,UAAYtB,EAAIH,SAAA,EAC/CwB,EAAAA,EAAAA,MAACE,EAAAA,EAAkB,CAAGR,MAAOA,EACPC,YAAaA,EACbC,QAASA,EACTO,MAAOX,EACPjB,QAASA,EACT6B,SAAWC,GAAMZ,EAAQY,EAAEC,OAAOH,OAAO3B,SAAA,EAC7DI,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACC,QAASA,IAAMV,GAAoBD,GAAiBrB,UAC9DI,EAAAA,EAAAA,KAAC6B,EAAAA,EAAiB,MAEnBjC,MAEHI,EAAAA,EAAAA,KAAC8B,EAAAA,GAAW,CACRC,KAAMd,EACNe,aAnBgBC,IACxBpB,GAASqB,GAAaA,EAAWD,EAAYE,OAAM,EAmB3CC,mBAAmB,EAEnBC,WAAYC,EAAAA,GAAWC,OACvBlB,MAAO,WACL,E,cCxCd,MAAMmB,EAAgB9C,IAAwC,IAAvC,GAACc,KAAOT,GAAyBL,EAEtD,MAAO6B,EAAOkB,GAAYC,EAAAA,SAAe,IAEzC,OAAOtB,EAAAA,EAAAA,MAACf,EAAAA,EAAK,CAACG,GAAI,IAAIA,MAAST,EAAIH,SAAA,EAWjCI,EAAAA,EAAAA,KAAC2C,EAAc,CAAC/B,KAAMW,EAAOV,QAAS4B,EAAS7C,UAC7CI,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAAA/B,UACZI,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,SAIV5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAAU,CAAAjD,SAAE2B,MASP,EAGV,EAAemB,EAAAA,KAAWF,E","sources":["component/input/FunctionalTextArea.tsx","component/input/EmojiTextField.tsx","domain/gallery/GalleryWidget.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {Stack, TextField, TextFieldProps} from '@mui/material';\r\n\r\ntype FunctionalTextAreaProps = {\r\n  minRows?: number;\r\n  children?: React.ReactNode | React.ReactNode[];\r\n  inputSlotProps?: any;\r\n  extraSlotProps?: any;\r\n} & Omit<TextFieldProps, \"multiline\">;\r\nconst FunctionalTextArea = ({\r\n                              minRows = 1,\r\n                              children,\r\n                              inputSlotProps = {},\r\n                              extraSlotProps = {},\r\n                              ...rest\r\n                            }: FunctionalTextAreaProps) => {\r\n  return <TextField\r\n      slotProps={{\r\n        input: {\r\n          endAdornment: (\r\n              <Stack direction={\"row\"} alignItems={\"center\"} sx={{alignSelf: \"flex-end\"}}>\r\n                {children}\r\n              </Stack>\r\n          ),\r\n          ...inputSlotProps\r\n        },\r\n        ...extraSlotProps\r\n      }}\r\n      minRows={minRows}\r\n      fullWidth\r\n      multiline\r\n      {...rest}\r\n  />\r\n};\r\n\r\nexport default FunctionalTextArea;","import React, {useState} from 'react';\r\nimport {IconButton, Stack, StackProps, TextField, TextFieldProps} from '@mui/material';\r\nimport EmojiPicker, {EmojiStyle} from 'emoji-picker-react';\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport FunctionalTextArea from \"./FunctionalTextArea\";\r\n\r\ntype EmojiTextFieldProps = {\r\n  text: string;\r\n  setText: React.Dispatch<React.SetStateAction<string>>;\r\n  label?: string;\r\n  placeholder?: string;\r\n  minRows?: number;\r\n  variant?: TextFieldProps['variant'];\r\n  children?: React.ReactNode;\r\n} & StackProps\r\n\r\nconst EmojiTextField = ({\r\n                          text,\r\n                          setText,\r\n                          label = void 0,\r\n                          placeholder = \"Type a message\",\r\n                          variant = \"outlined\",\r\n                          minRows = 1,\r\n                          children,\r\n                          ...rest\r\n                        }: EmojiTextFieldProps) => {\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState<boolean>(false);\r\n\r\n  const handleEmojiClick = (emojiObject: any) => {\r\n    setText((prevText) => prevText + emojiObject.emoji);\r\n  };\r\n\r\n  return (\r\n      <Stack alignItems={\"end\"} width={\"100%\"} {...rest}>\r\n        <FunctionalTextArea   label={label}\r\n                              placeholder={placeholder}\r\n                              variant={variant}\r\n                              value={text}\r\n                              minRows={minRows}\r\n                              onChange={(e) => setText(e.target.value)}>\r\n          <IconButton onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\r\n            <EmojiEmotionsIcon/>\r\n          </IconButton>\r\n          {children}\r\n        </FunctionalTextArea>\r\n        <EmojiPicker\r\n            open={showEmojiPicker}\r\n            onEmojiClick={handleEmojiClick}\r\n            skinTonesDisabled={true}\r\n            // onSkinToneChange={(skinTone: any) => console.log(skinTone)}\r\n            emojiStyle={EmojiStyle.NATIVE}\r\n            width={\"100%\"}/>\r\n      </Stack>\r\n  );\r\n};\r\n\r\nexport default EmojiTextField;","// @flow\r\nimport * as React from 'react';\r\nimport {IconButton, Stack, StackProps} from \"@mui/material\";\r\nimport EmojiPicker, {Emoji, EmojiClickData, EmojiStyle} from 'emoji-picker-react';\r\nimport {Typography} from \"../../component/wrapper/MuiWrappers\";\r\nimport {print} from \"../../api/util/Logging\";\r\nimport {EmojiText} from \"../../component/emoji/EmojiText\";\r\nimport EmojiTextField from \"../../component/input/EmojiTextField\";\r\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\ntype GalleryWidgetProps = {} & StackProps;\r\nconst GalleryWidget = ({sx, ...rest}: GalleryWidgetProps) => {\r\n\r\n  const [value, setValue] = React.useState('');\r\n\r\n  return <Stack sx={{...sx}} {...rest}>\r\n    {/*<p>*/}\r\n    {/*  My Favorite emoji is: <Emoji unified=\"1f423\"/>*/}\r\n    {/*</p>*/}\r\n\r\n    {/*<EmojiPicker open={true} emojiStyle={EmojiStyle.NATIVE}*/}\r\n    {/*             onEmojiClick={(emojiData: EmojiClickData, event: MouseEvent) => {*/}\r\n    {/*               print(emojiData);*/}\r\n    {/*               setValue(value + emojiData.emoji);*/}\r\n    {/*             }}/>*/}\r\n\r\n    <EmojiTextField text={value} setText={setValue}>\r\n      <IconButton >\r\n     <SendIcon/>\r\n      </IconButton>\r\n    </EmojiTextField>\r\n\r\n    <Typography>{value}</Typography>\r\n\r\n    {/*<textarea>*/}\r\n    {/*   */}\r\n    {/*  /!*My Favorite emoji is:*!/*/}\r\n    {/*  <Emoji unified=\"1f423\" size={25}/>*/}\r\n    {/*  </textarea>*/}\r\n\r\n\r\n  </Stack>;\r\n};\r\n\r\nexport default React.memo(GalleryWidget);"],"names":["_ref","minRows","children","inputSlotProps","extraSlotProps","rest","_jsx","TextField","slotProps","input","endAdornment","Stack","direction","alignItems","sx","alignSelf","fullWidth","multiline","text","setText","label","placeholder","variant","showEmojiPicker","setShowEmojiPicker","useState","_jsxs","width","FunctionalTextArea","value","onChange","e","target","IconButton","onClick","EmojiEmotionsIcon","EmojiPicker","open","onEmojiClick","emojiObject","prevText","emoji","skinTonesDisabled","emojiStyle","EmojiStyle","NATIVE","GalleryWidget","setValue","React","EmojiTextField","SendIcon","Typography"],"sourceRoot":""}