{"version":3,"file":"static/js/979.5ed47081.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/ThumbUp.js","../node_modules/@mui/icons-material/esm/RemoveRedEye.js","../node_modules/@mui/icons-material/esm/Download.js","component/text/TextIcon.tsx","domain/nodeTreeStore/component/CoverCard.tsx","domain/nodeTreeStore/component/NodeTreeItemProfile.tsx","domain/nodeTreeStore/NodeTreeStoreWidget.tsx","../node_modules/@mui/material/Grid2/Grid2.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h4V9H1zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73z\"\n}), 'ThumbUp');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'RemoveRedEye');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');","import {Stack, StackProps} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {Typography} from \"../wrapper/MuiWrappers\";\r\n\r\n\r\ntype TextIconProps = {\r\n  icon: React.ReactNode;\r\n} & StackProps;\r\n\r\nconst TextIcon = ({icon, children, sx, ...rest}: TextIconProps) => {\r\n\r\n  const iconWithCustomFontSize = React.cloneElement(icon as React.ReactElement, {\r\n    sx: {\r\n      ...((icon as React.ReactElement).props.sx),\r\n      fontSize: {\r\n        xs: \"1rem\",\r\n        sm: \"1rem\",\r\n        md: \"1rem\",\r\n        lg: \"1.2rem\",\r\n        xl: \"1.2rem\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return <Stack direction=\"row\" alignItems=\"center\" gap={0.3} sx={{...sx}} {...rest}>\r\n    {iconWithCustomFontSize}\r\n    <Typography variant={\"body1\"} sx={{\r\n      fontSize: {\r\n        xs: \"0.8rem\",\r\n        sm: \"0.8rem\",\r\n        md: \"0.8rem\",\r\n        lg: \"1rem\",\r\n        xl: \"1rem\",\r\n      },\r\n    }}>{children}</Typography>\r\n  </Stack>;\r\n}\r\n\r\nexport default TextIcon;","import {Box, Stack, StackProps} from \"@mui/material\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport {toReadableNumber} from \"../../../api/util/StringUtil\";\r\nimport TextIcon from \"../../../component/text/TextIcon\";\r\nimport {Typography} from \"../../../component/wrapper/MuiWrappers\";\r\nimport OneOf from \"../../../component/container/OneOf\";\r\n\r\n\r\ntype CoverCardProps = {\r\n  targetUrl: string;\r\n  onClickRoute?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\r\n  owner?: string;\r\n  title?: string;\r\n  description?: string;\r\n  aspectRatio?: number;\r\n  coverImageUrl?: string;\r\n  altImg?: any;\r\n  radius?: number;\r\n  like?: number;\r\n  view?: number;\r\n  download?: number;\r\n  SkeletonSx?: any;\r\n} & StackProps;\r\n\r\nconst CoverCard = ({\r\n                     targetUrl,\r\n                     onClickRoute,\r\n                     owner,\r\n                     coverImageUrl,\r\n                     altImg,\r\n                     title,\r\n                     description,\r\n                     aspectRatio = 16 / 9,\r\n                     radius = 1,\r\n                     like = 0,\r\n                     view = 0,\r\n                     download = 0,\r\n                     sx,\r\n                     SkeletonSx,\r\n                     ...rest\r\n                   }: CoverCardProps) => {\r\n\r\n  const [imageLoaded, setImageLoaded] = useState(coverImageUrl === void 0); // 用于追踪图片是否加载完成\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const compactView = toReadableNumber(like).length  + toReadableNumber(view).length + toReadableNumber(download).length > 14;\r\n  const noCounter = like === 0 && view === 0 && download === 0;\r\n  return (\r\n      <Stack\r\n          maxWidth={\"auto\"}\r\n          spacing={1}\r\n\r\n          onMouseEnter={() => setIsHovered(true)} // 当鼠标进入Card时设置isHovered为true\r\n          onMouseLeave={() => setIsHovered(false)} // 当鼠标离开Card时设置isHovered为false\r\n          sx={{...sx}}\r\n          {...rest}>\r\n        <Box style={{position: 'relative', width: \"auto\", height: 'auto'}}>\r\n          {!imageLoaded && (\r\n              <Skeleton variant=\"rectangular\"\r\n                        sx={{\r\n                          objectFit: 'cover',\r\n                          width: \"100%\", // Ensure full width\r\n                          height: \"auto\", // Maintain aspect ratio\r\n                          aspectRatio: aspectRatio,\r\n                          ...SkeletonSx,\r\n                        }}/>\r\n          )}\r\n          <Link to={targetUrl} onClick={(event) => {\r\n            if (onClickRoute) {\r\n              onClickRoute(event);\r\n            }\r\n          }}>\r\n            <OneOf index={coverImageUrl === void 0 ? 0 : 1}>\r\n            {altImg}\r\n            <Box component={\"img\"} src={coverImageUrl}\r\n                 onLoad={() => setImageLoaded(true)}\r\n                 borderRadius={radius}\r\n                 sx={{\r\n                   display: imageLoaded ? 'block' : 'none',\r\n                   objectFit: 'cover', // 保证图片覆盖整个区域\r\n                   width: \"100%\", // Ensure full width\r\n                   height: \"auto\", // Maintain aspect ratio\r\n                   aspectRatio: aspectRatio, // Maintain aspect ratio\r\n                 }}>\r\n            </Box>\r\n            </OneOf>\r\n\r\n          </Link>\r\n          {imageLoaded && !noCounter && (\r\n              <Stack direction={\"row\"}\r\n                     borderRadius={radius}\r\n                     sx={{\r\n                       position: 'absolute',\r\n                       bottom: 0,\r\n                       left: 0,\r\n                       color: 'white',\r\n                       background: 'linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,0.8) 100%)', // 从上到下的渐变背景\r\n                       width: '100%',\r\n                       textAlign: 'start',\r\n                       paddingY: '6px',\r\n                       opacity: isHovered ? 0 : 1,\r\n                     }}\r\n                     style={{transition: 'opacity 0.5s ease'}}\r\n              >\r\n                <Stack\r\n                    direction={\"row\"}\r\n                    justifySelf={\"flex-start\"}\r\n                    alignItems={\"center\"}\r\n                    flexGrow={1}\r\n                    spacing={1}\r\n                    paddingLeft={2}\r\n                >\r\n                  <TextIcon icon={<ThumbUpIcon/>}>{toReadableNumber(like)}</TextIcon>\r\n                </Stack>\r\n                <Stack\r\n                    direction=\"row\"\r\n                    spacing={1}\r\n                >\r\n                  <Stack direction=\"row\"\r\n                         alignItems=\"center\"\r\n                         spacing={1}\r\n                         paddingRight={2}>\r\n                    <TextIcon sx={{\r\n                      display: {\r\n                        xs: \"none\",\r\n                        sm: \"none\",\r\n                        md: \"none\",\r\n                        lg: compactView ? \"none\" : \"flex\"\r\n                      }\r\n                    }}\r\n                              icon={<RemoveRedEyeIcon\r\n                                  fontSize={\"small\"}/>}>{toReadableNumber(view)}</TextIcon>\r\n                    <TextIcon\r\n                        sx={{\r\n                          display: {\r\n                            xs: \"none\",\r\n                            sm: \"none\",\r\n                            md: \"none\",\r\n                            lg: compactView ? \"none\" : \"flex\"\r\n                          }\r\n                        }}\r\n                        icon={<DownloadIcon\r\n                            fontSize={\"small\"}/>}>{toReadableNumber(download)}</TextIcon>\r\n                    <TextIcon sx={{\r\n                      display: {\r\n                        md: \"flex\",\r\n                        lg: compactView ? \"flex\" : \"none\"\r\n                      }\r\n                    }} icon={<RemoveRedEyeIcon/>}>{toReadableNumber(view)}</TextIcon>\r\n                  </Stack>\r\n                </Stack>\r\n              </Stack>)}\r\n        </Box>\r\n        <Stack direction={\"column\"} maxWidth={\"100%\"}>\r\n\r\n          <Typography\r\n              gutterBottom\r\n              variant=\"body1\" // Use a smaller variant than h5\r\n              textAlign={\"left\"}\r\n              fontWeight={\r\n                {xs: \"bold\", sm: \"bold\", md: \"bold\", lg: \"bold\", xl: \"bold\"}\r\n              }\r\n              sx={{\r\n                display: '-webkit-box',\r\n                overflow: 'hidden',\r\n                WebkitBoxOrient: 'vertical',\r\n                WebkitLineClamp: {xs: 1, sm: 1, md:1, lg:1, xl: 1},\r\n                lineHeight: '1em', // Limit height to 2.5 lines\r\n                fontSize: {\r\n                  xs: \"12px\", sm: \"12px\", md: \"15px\", lg: '15px', xl: '15px'\r\n                },\r\n                height: \"2em\",\r\n                textOverflow: 'ellipsis',\r\n                color: \"black\"\r\n              }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n\r\n          {/*TODO*/}\r\n          <Link to={\"#\"}><Typography variant=\"body2\"\r\n                                                                    color=\"text.secondary\"\r\n                                                                    textAlign={\"left\"}\r\n                                                                    style={{cursor: owner ? 'pointer' : 'default'}}\r\n                                                                    sx={{\r\n                                                                      fontSize: {\r\n                                                                        xs: '10px',\r\n                                                                        md: '13px',\r\n                                                                      }\r\n                                                                    }}> {/* Reduce font size */}\r\n            {description}\r\n          </Typography></Link>\r\n        </Stack>\r\n      </Stack>\r\n  );\r\n}\r\n\r\nexport default CoverCard;","import * as React from 'react';\r\nimport {NodeTreeProfile} from \"../../../proto/application/nodetreestore/NodeTreeStoreMessage\";\r\nimport CoverCard from \"./CoverCard\";\r\nimport {get_node_tree_item_url} from \"../../../navigation/routerUtil\";\r\nimport {getDownloadCount, getLikeCount, getViewCount} from \"../NodeTreeStoreUtil\";\r\nimport {NodeTreePreviewDefaultImg} from \"./NodeTreePreviewDefaultImg\";\r\n\r\ntype NodeTreeItemProfileProps = {\r\n  profile: NodeTreeProfile\r\n};\r\n\r\n\r\nexport const NodeTreeItemProfile = ({\r\n                                      profile\r\n                                    }: NodeTreeItemProfileProps) => {\r\n\r\n  return <CoverCard\r\n    title={profile.name}\r\n    targetUrl = {get_node_tree_item_url(profile.id)}\r\n    aspectRatio={1}\r\n    view={Math.max(getViewCount(profile), 1)}\r\n    download={getDownloadCount(profile)}\r\n    SkeletonSx={{width: 200, height: 200}}\r\n    like={getLikeCount(profile)}\r\n    altImg={<NodeTreePreviewDefaultImg type={profile.type} radius={1}\r\n                                       height={\"auto\"} width={\"100%\"} preserveAspectRatio={\"1\"}\r\n    /> }\r\n    coverImageUrl={profile.avatarUrl} />\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport {Pagination, Stack} from \"@mui/material\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {queryNodeTree, querySlice} from \"./service/NodeTreeStoreService\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport {\r\n  NodeTreeProfile,\r\n  SortType\r\n} from \"../../proto/application/nodetreestore/NodeTreeStoreMessage\";\r\nimport ClearableTextField from \"../../component/input/ClearableTextField\";\r\nimport MenuButton from \"../../component/button/MenuButton\";\r\nimport ContentButton from \"../../component/button/ContentButton\";\r\nimport {NodeTreeItemProfile} from \"./component/NodeTreeItemProfile\";\r\nimport Grid from '@mui/material/Grid2';\r\nimport {PageQuery} from \"../../proto/framework/QueryMessage\";\r\nimport {queryCustomerProfile} from \"../customer/service/CustomerService\";\r\nimport ProfileAvatar from \"../customer/component/ProfileAvatar\";\r\nimport {CustomerProfile} from \"../../proto/framework/customer/CustomerInfo\";\r\nimport {print} from \"../../api/util/Logging\";\r\nimport {\r\n  getDownloadCount,\r\n  getEngineLabel,\r\n  getLikeCount,\r\n  getViewCount,\r\n  typeToLabel\r\n} from \"./NodeTreeStoreUtil\";\r\nimport {useAppSelector} from \"../../api/redux/hooks\";\r\nimport {selectLoginResponse} from \"../../api/redux/slice/SettingSlice\";\r\n\r\ntype Props = {};\r\nconst NodeTreeStoreWidget = (props: Props) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  // const\r\n  const query = searchParams.get(\"q\") ?? \"\";\r\n  const owner = searchParams.get(\"o\") ?? \"\";\r\n  const type = searchParams.get(\"t\") ?? \"\";\r\n  const engine = searchParams.get(\"e\") ?? \"\";\r\n  const currentPage = searchParams.get(\"p\") ? parseInt(searchParams.get(\"p\") ?? \"0\") : 0;\r\n  const pageSize = 40;\r\n\r\n  const loginResponse = useAppSelector(selectLoginResponse);\r\n\r\n  const [currentQuery, setCurrentQuery] = useState(query);\r\n\r\n  const [nodeTrees, setNodeTrees] = React.useState<NodeTreeProfile[]>([]);\r\n\r\n  const [totalPages, setTotalPages] = React.useState<number>(1);\r\n\r\n  const [engineList, setEngineList] = React.useState<string[]>([]);\r\n  const [typeList, setTypeList] = React.useState<string[]>([]);\r\n  const [sortType, setSortType] = React.useState<SortType>(SortType.DEFAULT);\r\n\r\n\r\n  const [customerProfile, setCustomerProfile] = React.useState<CustomerProfile | null>(null);\r\n  useEffect(() => {\r\n    if (owner === \"\") {\r\n      return;\r\n    }\r\n    queryCustomerProfile(owner).then(res => {\r\n      setCustomerProfile(res);\r\n    }).catch(e => {\r\n      print(e);\r\n    });\r\n  }, [owner]);\r\n\r\n  useEffect(() => {\r\n    querySlice().then(res => {\r\n      setEngineList(res.engines);\r\n      setTypeList(res.types);\r\n\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const pageQuery = PageQuery.create();\r\n    pageQuery.page = currentPage;\r\n    pageQuery.pageSize = pageSize;\r\n\r\n    queryNodeTree(query, owner, type, engine, pageQuery, sortType).then(res => {\r\n      setNodeTrees(sortNodeTrees(res.nodeTrees));\r\n      setTotalPages(res.pageResult?.totalPage ?? 1);\r\n    });\r\n  }, [searchParams, query, engine, type, owner, currentPage, sortType]);\r\n\r\n  const sortNodeTrees = (nodeTrees: NodeTreeProfile[]) => {\r\n    switch (sortType) {\r\n      case SortType.DEFAULT:\r\n        return nodeTrees;\r\n      case SortType.UPDATE:\r\n        return nodeTrees.sort((a, b) => {\r\n          return (b.updateAt ?? 0) - (a.updateAt ?? 0);\r\n        })\r\n      case SortType.VIEW:\r\n        return nodeTrees.sort((a, b) => {\r\n          return (getViewCount(b)) - (getViewCount(a));\r\n        })\r\n      case SortType.LIKE:\r\n        return nodeTrees.sort((a, b) => {\r\n          return getLikeCount(b) - getLikeCount(a);\r\n        })\r\n      case SortType.DOWNLOAD:\r\n        return nodeTrees.sort((a, b) => {\r\n          return getDownloadCount(b) - getDownloadCount(a);\r\n        })\r\n      default:\r\n        return nodeTrees;\r\n    }\r\n  }\r\n\r\n  const engineToTitle = (str: string) => {\r\n    if (str === \"\") {\r\n      return \"All Engines\";\r\n    }\r\n    return getEngineLabel(str);\r\n  }\r\n\r\n  const getEngineMenuItems = () => {\r\n    return [\"\", ...engineList].map(engine => {\r\n      return <ContentButton\r\n          title={engineToTitle(engine)}\r\n          onClick={() => {\r\n            setSearchParams((searchParams) => {\r\n              searchParams.set(\"e\", engine);\r\n              return searchParams;\r\n            })\r\n          }}\r\n      ></ContentButton>;\r\n    })\r\n  }\r\n\r\n  const typeToTitle = (str: string) => {\r\n    if (str === \"\") {\r\n      return \"All Node Types\";\r\n    }\r\n    return typeToLabel(str);\r\n  }\r\n\r\n  const getTypeMenuItems = () => {\r\n    return [\"\", ...typeList].map(type => {\r\n      return <ContentButton\r\n          title={typeToTitle(type)}\r\n          onClick={() => {\r\n            setSearchParams((searchParams) => {\r\n              searchParams.set(\"t\", type);\r\n              return searchParams;\r\n            })\r\n          }}\r\n      ></ContentButton>;\r\n    });\r\n  }\r\n\r\n  const getUserMenuLabel = () => {\r\n    if (owner === loginResponse?.userId) {\r\n      return \"Only Me\";\r\n    }\r\n    return \"All Users\"\r\n  }\r\n\r\n  const getUserMenuItems = () => {\r\n    return [\r\n      <ContentButton title={\"All Users\"} onClick={() => {\r\n        setSearchParams((searchParams) => {\r\n          searchParams.set(\"o\", \"\");\r\n          return searchParams;\r\n        })\r\n\r\n      }}></ContentButton>,\r\n      <ContentButton title={\"Only Me\"} onClick={() => {\r\n        setSearchParams((searchParams) => {\r\n          searchParams.set(\"o\", loginResponse?.userId ?? \"\");\r\n          return searchParams;\r\n        })\r\n      }}></ContentButton>,\r\n    ]\r\n  }\r\n\r\n  const sortTypeToTitle = (sortType: SortType) => {\r\n    switch (sortType) {\r\n      case SortType.DEFAULT:\r\n        return \"Default\";\r\n      case SortType.UPDATE:\r\n        return \"Update Time\";\r\n      case SortType.VIEW:\r\n        return \"View Count\";\r\n      case SortType.LIKE:\r\n        return \"Like Count\";\r\n      case SortType.DOWNLOAD:\r\n        return \"Download Count\";\r\n      default:\r\n        return \"Default\";\r\n    }\r\n  }\r\n\r\n  const getSorTypeMenuItems = () => {\r\n    return [SortType.DEFAULT, SortType.UPDATE, SortType.VIEW, SortType.LIKE, SortType.DOWNLOAD].map(sortType => {\r\n      return <ContentButton\r\n          title={sortTypeToTitle(sortType)}\r\n          onClick={() => {\r\n            setSortType(sortType);\r\n          }}\r\n      ></ContentButton>;\r\n    });\r\n  }\r\n\r\n\r\n  return <Stack direction={\"column\"} width={\"100%\"} alignItems={\"center\"}>\r\n\r\n    <Stack direction={\"column\"} spacing={1} sx={{\r\n      width: {\r\n        xs: \"95%\",\r\n        sm: \"90%\",\r\n        md: \"80%\",\r\n        lg: \"80%\",\r\n        xl: \"80%\",\r\n      },\r\n    }}>\r\n      <Stack direction={\"row\"} justifyContent={\"center\"} alignItems={\"center\"} width={\"100%\"}\r\n             spacing={2}>\r\n        {owner !== \"\" && customerProfile &&\r\n            <ProfileAvatar title={customerProfile.name}\r\n                           avatarUrl={customerProfile.avatarUrl}\r\n                           onClick={() => {\r\n                             setSearchParams((searchParams) => {\r\n                               searchParams.set(\"o\", \"\");\r\n                               return searchParams;\r\n                             })\r\n                           }}\r\n            />\r\n        }\r\n        <ClearableTextField label={\"Search\"} value={currentQuery}\r\n                            onSubmit={() => {\r\n\r\n                              setSearchParams((searchParams) => {\r\n                                searchParams.set(\"q\", currentQuery);\r\n                                return searchParams;\r\n                              })\r\n\r\n                            }} setValue={setCurrentQuery} endAdornment={<SearchIcon/>}/>\r\n      </Stack>\r\n      <Stack direction={\"row\"} justifyContent={\"space-between\"}>\r\n        <Stack direction={\"row\"} justifyContent={\"start\"}>\r\n          <MenuButton title={engineToTitle(engine)} menuItems={getEngineMenuItems()}\r\n                      size={\"small\"}/>\r\n          <MenuButton title={typeToTitle(type)} menuItems={getTypeMenuItems()} size={\"small\"}/>\r\n          {loginResponse?.userId &&\r\n              <MenuButton title={getUserMenuLabel()} menuItems={getUserMenuItems()}\r\n                          size={\"small\"}/>}\r\n\r\n        </Stack>\r\n        <Stack direction={\"row\"} justifyContent={\"end\"}>\r\n          <MenuButton title={sortTypeToTitle(sortType)} menuItems={getSorTypeMenuItems()}\r\n                      size={\"small\"}/>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n\r\n    <Grid container rowSpacing={{xs: 1.5, sm: 1.5, md: 1, lg: 1, xl: 1}}\r\n          columnSpacing={{xs: 1, sm: 1, md: 2, lg: 2, xl: 2}}\r\n          width={\"100%\"}\r\n          marginTop={\"0px\"}>\r\n\r\n      {nodeTrees.map((nodeTree: NodeTreeProfile, index) => {\r\n        return <Grid size={{\r\n          xs: 6,\r\n          sm: 6,\r\n          md: 3,\r\n          lg: 3,\r\n          xl: 12 / 5\r\n        }} key={nodeTree.id}>\r\n          <NodeTreeItemProfile profile={nodeTree}/>\r\n        </Grid>;\r\n      })}\r\n\r\n      {/*// <ListComponent data={nodeTrees} renderItem={(nodeTree:NodeTreeProfile, index) => {*/}\r\n      {/*//   return <Grid item xs={6} sm={6} md={3} lg={3} xl={12 / 5} key={nodeTree.id} ><NodeTreeItemProfile profile={nodeTree}/></Grid>;*/}\r\n      {/*// }}/>*/}\r\n    </Grid>\r\n\r\n    {totalPages > 1 && <Pagination\r\n        count={totalPages}\r\n        page={currentPage + 1} onChange={(event, page) => {\r\n\r\n      setSearchParams((searchParams) => {\r\n        searchParams.set(\"p\", \"\" + (page - 1));\r\n        return searchParams;\r\n      })\r\n    }}/>}\r\n\r\n\r\n  </Stack>\r\n};\r\n\r\nexport default NodeTreeStoreWidget;","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createGrid as createGrid2 } from '@mui/system/Grid';\nimport { styled, useThemeProps } from \"../styles/index.js\";\n/**\n *\n * Demos:\n *\n * - [Grid version 2](https://mui.com/material-ui/react-grid2/)\n *\n * API:\n *\n * - [Grid2 API](https://mui.com/material-ui/api/grid-2/)\n */\nconst Grid2 = createGrid2({\n  createStyledComponent: styled('div', {\n    name: 'MuiGrid2',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  componentName: 'MuiGrid2',\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiGrid2'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid2.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Defines the offset value for the type `item` components.\n   */\n  offset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Defines the size of the the type `item` components.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @internal\n   * The level of the grid starts from `0`\n   * and increases when the grid nests inside another grid regardless of container or item.\n   *\n   * ```js\n   * <Grid> // level 0\n   *   <Grid> // level 1\n   *     <Grid> // level 2\n   *   <Grid> // level 1\n   * ```\n   *\n   * Only consecutive grid is considered nesting.\n   * A grid container will start at `0` if there are non-Grid element above it.\n   *\n   * ```js\n   * <Grid> // level 0\n   *   <div>\n   *     <Grid> // level 0\n   *       <Grid> // level 1\n   * ```\n   */\n  unstable_level: PropTypes.number,\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n} : void 0;\nexport default Grid2;"],"names":["createSvgIcon","_jsx","d","_ref","icon","children","sx","rest","iconWithCustomFontSize","React","props","fontSize","xs","sm","md","lg","xl","_jsxs","Stack","direction","alignItems","gap","Typography","variant","targetUrl","onClickRoute","owner","coverImageUrl","altImg","title","description","aspectRatio","radius","like","view","download","SkeletonSx","imageLoaded","setImageLoaded","useState","isHovered","setIsHovered","compactView","toReadableNumber","length","noCounter","maxWidth","spacing","onMouseEnter","onMouseLeave","Box","style","position","width","height","Skeleton","objectFit","Link","to","onClick","event","OneOf","index","component","src","onLoad","borderRadius","display","bottom","left","color","background","textAlign","paddingY","opacity","transition","justifySelf","flexGrow","paddingLeft","TextIcon","ThumbUpIcon","paddingRight","RemoveRedEyeIcon","DownloadIcon","gutterBottom","fontWeight","overflow","WebkitBoxOrient","WebkitLineClamp","lineHeight","textOverflow","cursor","NodeTreeItemProfile","profile","CoverCard","name","get_node_tree_item_url","id","Math","max","getViewCount","getDownloadCount","getLikeCount","NodeTreePreviewDefaultImg","type","preserveAspectRatio","avatarUrl","_searchParams$get","_searchParams$get2","_searchParams$get3","_searchParams$get4","_searchParams$get5","searchParams","setSearchParams","useSearchParams","query","get","engine","currentPage","parseInt","loginResponse","useAppSelector","selectLoginResponse","currentQuery","setCurrentQuery","nodeTrees","setNodeTrees","totalPages","setTotalPages","engineList","setEngineList","typeList","setTypeList","sortType","setSortType","SortType","DEFAULT","customerProfile","setCustomerProfile","useEffect","queryCustomerProfile","then","res","catch","e","print","querySlice","engines","types","pageQuery","PageQuery","create","page","pageSize","queryNodeTree","_res$pageResult$total","_res$pageResult","sortNodeTrees","pageResult","totalPage","UPDATE","sort","a","b","_b$updateAt","_a$updateAt","updateAt","VIEW","LIKE","DOWNLOAD","engineToTitle","str","getEngineLabel","typeToTitle","typeToLabel","sortTypeToTitle","justifyContent","ProfileAvatar","set","ClearableTextField","label","value","onSubmit","setValue","endAdornment","SearchIcon","MenuButton","menuItems","map","ContentButton","size","userId","_loginResponse$userId","Grid","container","rowSpacing","columnSpacing","marginTop","nodeTree","Pagination","count","onChange","createGrid2","createStyledComponent","styled","slot","overridesResolver","styles","root","componentName","useThemeProps","inProps"],"sourceRoot":""}