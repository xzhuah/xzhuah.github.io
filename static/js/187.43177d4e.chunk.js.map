{"version":3,"file":"static/js/187.43177d4e.chunk.js","mappings":"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","sources":["component/container/WebPageContainer.tsx","domain/website/page/3D/BabyLonCanvas.tsx","domain/website/page/3D/3DUtils.ts","domain/website/page/3D/PointLightWithControl.tsx","domain/website/page/3D/DirectionLightWithControl.tsx","domain/website/page/3D/HemisphericLightWithControl.tsx","domain/website/page/3D/BabyLonMMD.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {Stack, StackProps} from \"@mui/material\";\r\n\r\n\r\nexport const WebPageContainer = ({sx, ...rest}: StackProps) => {\r\n  return <Stack direction={\"column\"} sx={{\r\n    marginTop: 4,\r\n    marginBottom: 8,\r\n    marginX: {\r\n      xs: 0,\r\n      sm: 2,\r\n      md: 6,\r\n      lg: 24,\r\n      xl: 48\r\n    },\r\n    ...sx\r\n  }}\r\n                {...rest}>\r\n  </Stack>\r\n};","import * as React from 'react';\r\nimport {useEffect, useRef} from 'react';\r\nimport {Engine, EngineOptions, Scene, SceneOptions} from \"@babylonjs/core\";\r\n\r\nconst BabyLonCanvas = ({\r\n                         antialias = true,\r\n                         engineOptions,\r\n                         adaptToDeviceRatio,\r\n                         sceneOptions,\r\n                         onRender,\r\n                         onSceneReady = () => {\r\n                         },\r\n                         children,\r\n                         ...rest\r\n                       }: {\r\n  antialias?: boolean,\r\n  engineOptions?: EngineOptions,\r\n  adaptToDeviceRatio?: boolean,\r\n  sceneOptions?: SceneOptions,\r\n  onRender?: (scene: Scene) => void,\r\n  onSceneReady?: (scene: Scene) => any,\r\n  [key: string]: any\r\n}) => {\r\n  const reactCanvas = useRef(null);\r\n\r\n  // set up basic engine and scene\r\n  useEffect(() => {\r\n    const canvas = reactCanvas.current;\r\n\r\n    if (!canvas) return;\r\n\r\n    const engine = new Engine(canvas, antialias, engineOptions, adaptToDeviceRatio);\r\n    engine.setHardwareScalingLevel(1 / window.devicePixelRatio);\r\n    // engine.setHardwareScalingLevel(1 );\r\n    const scene = new Scene(engine, sceneOptions);\r\n    if (scene.isReady()) {\r\n      onSceneReady(scene);\r\n    } else {\r\n      try {\r\n        scene.onReadyObservable.addOnce((scene) => {\r\n          try {\r\n            onSceneReady(scene);\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n    engine.runRenderLoop(() => {\r\n      if (typeof onRender === \"function\") onRender(scene);\r\n      scene.render();\r\n    });\r\n\r\n    const resize = () => {\r\n      scene.getEngine().resize();\r\n      // console.log(\"listener : \" + window.innerWidth + \" , \" + window.innerHeight);\r\n    };\r\n\r\n    if (window) {\r\n      window.addEventListener(\"resize\", resize);\r\n    }\r\n\r\n    return () => {\r\n      try {\r\n        if (scene && scene.getEngine()) {\r\n\r\n          scene.getEngine().dispose();\r\n        }\r\n      } catch (e) {\r\n\r\n        console.log(e);\r\n      }\r\n\r\n      if (window) {\r\n        window.removeEventListener(\"resize\", resize);\r\n      }\r\n    };\r\n  }, [antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady]);\r\n\r\n  return <><canvas ref={reactCanvas}\r\n                 style={{backgroundColor: \"black\", height: \"100svh\", width: \"100%\"}} {...rest} />\r\n    {children}\r\n  </>;\r\n};\r\n\r\nexport default BabyLonCanvas;","import {\r\n  ArcRotateCamera,\r\n  Color3,\r\n  DirectionalLight,\r\n  HemisphericLight,\r\n  MeshBuilder,\r\n  PointLight,\r\n  Scene,\r\n  SpotLight,\r\n  StandardMaterial,\r\n  UniversalCamera,\r\n  Vector3\r\n} from \"@babylonjs/core\";\r\nimport {TargetCamera} from \"@babylonjs/core/Cameras/targetCamera\";\r\nimport {StreamAudioPlayer} from \"babylon-mmd\";\r\n\r\n// convert Color3 to '#ffffff', r,g,b are 0-1\r\nexport const color2Str = (color: Color3) => {\r\n  const r = Math.floor(color.r * 255).toString(16).padStart(2, '0');\r\n  const g = Math.floor(color.g * 255).toString(16).padStart(2, '0');\r\n  const b = Math.floor(color.b * 255).toString(16).padStart(2, '0');\r\n  return `#${r}${g}${b}`;\r\n}\r\n\r\nexport const str2Color = (str: string) => {\r\n  // convert '#ffffff' to Color3\r\n  const color = str.replace('#', '');\r\n  const r = parseInt(color.substring(0, 2), 16) / 255;\r\n  const g = parseInt(color.substring(2, 4), 16) / 255;\r\n  const b = parseInt(color.substring(4, 6), 16) / 255;\r\n  return new Color3(r, g, b);\r\n}\r\n\r\nexport const valueMapToRange = (valueIn100: number, minValue: number, maxValue: number) => {\r\n  return (maxValue - minValue) * valueIn100 / 100 + minValue;\r\n}\r\n// normalize a value to 0-100\r\nexport const normalizeValue = (value:number, minValue: number, maxValue: number) => {\r\n  return (value - minValue) * 100 / (maxValue - minValue);\r\n}\r\n\r\nexport const newAudioPlayer = (scene: Scene, path: string) => {\r\n  const audioPlayer = new StreamAudioPlayer(scene);\r\n  audioPlayer.source = path;\r\n  return audioPlayer;\r\n}\r\n\r\nexport const debugObject = (scene: Scene, name: string, position: Vector3, color: Color3, radius = 1,) => {\r\n  // add a sphere to show the position of the object\r\n  const sphere = MeshBuilder.CreateSphere(name, {diameter: radius}, scene);\r\n  sphere.position = position;\r\n  const mat = new StandardMaterial(name + \"_mat\", scene);\r\n  mat.diffuseColor = color;\r\n\r\n  // material only handles 4 lights in the scene by default, so increase the number of lights\r\n  // mat.maxSimultaneousLights = 6;\r\n\r\n  sphere.material = mat;\r\n\r\n  return sphere;\r\n}\r\n\r\nexport const newArcRotateCameraWithControls = (scene: Scene, canvas: any, target: Vector3, name = \"arcCamera\", initialPosition?: Vector3) => {\r\n  const position = initialPosition ? initialPosition : new Vector3(0, 0, 0);\r\n  const radius = target.subtract(position).length();\r\n  const camera = new ArcRotateCamera(\r\n      name,\r\n      0, //-Math.PI / 2,             // Alpha (horizontal rotation)\r\n      0, //Math.PI / 2,             // Beta (vertical rotation)\r\n      radius,                      // Radius (distance from target)\r\n      target,  // Target (point to orbit around)\r\n      scene\r\n  );\r\n  camera.setPosition(position);\r\n  // 最大距离\r\n  camera.maxZ = 1000;\r\n\r\n  // 旋转控制\r\n  // camera.keysUp.push(87);    // W key\r\n  // camera.keysDown.push(83);  // S key\r\n  // camera.keysLeft.push(65);  // A key\r\n  // camera.keysRight.push(68); // D key\r\n\r\n  // Attach the camera to the canvas for mouse controls\r\n  camera.attachControl(canvas, true, true);\r\n  // camera.panningAxis = new Vector3(-1, -1, 1);\r\n  // camera.invertRotation = true;\r\n\r\n  // Customize camera control settings to resemble Three.js OrbitControls\r\n  // camera.lowerBetaLimit = 0.1;            // Limit vertical rotation (prevents flipping)\r\n  // camera.upperBetaLimit = Math.PI / 2;    // Limit vertical rotation to halfway\r\n  // camera.lowerRadiusLimit = 2;            // Minimum zoom (prevents getting too close)\r\n  // camera.upperRadiusLimit = 50;           // Maximum zoom (prevents zooming out too far)\r\n  camera.wheelDeltaPercentage = 0.01;     // Zoom sensitivity\r\n  camera.panningSensibility = 200;         // Pan sensitivity\r\n  camera.angularSensibilityX = 6000;      // Mouse rotation sensitivity (horizontal)\r\n  camera.angularSensibilityY = 6000;      // Mouse rotation sensitivity (vertical)\r\n\r\n  return camera;\r\n}\r\n\r\nexport const newUniversalCameraWithControls = (scene: Scene, canvas: any, name = \"universalCamera\") => {\r\n  const universalCamera = new UniversalCamera(name, new Vector3(0, 10, -15), scene);\r\n  universalCamera.setTarget(new Vector3(0, 10, 0));\r\n  universalCamera.attachControl(canvas, true);\r\n  universalCamera.keysRotateRight.push(69); // E key\r\n  universalCamera.keysDownward.push(16); // shift key\r\n  universalCamera.keysDownward.push(17); // ctrl key\r\n  universalCamera.keysUpward.push(32); // space key\r\n  universalCamera.keysRotateLeft.push(81); // Q key\r\n  universalCamera.keysLeft.push(65);  // A key\r\n  universalCamera.keysRight.push(68); // D key\r\n  universalCamera.keysUp.push(87);    // W key\r\n  universalCamera.keysDown.push(83);  // S key\r\n  return universalCamera;\r\n}\r\n\r\n// WASD控制相机 WS控制前后移动，AD控制左右移动 WSFactor和ADFactor是指按下shift/ctrl时的移动速度的倍率\r\nexport const WASDCameraControls = (camera: TargetCamera | undefined, event: KeyboardEvent, sensibilityWS = 1, sensibilityAD = 0.1, WSFactor = 5, ADFactor = 5) => {\r\n  if (!camera) return;\r\n\r\n  let _sensibilityWS = sensibilityWS;\r\n  let _sensibilityAD = sensibilityAD;\r\n  // if shift is also pressed, multiply the sensibility by 5\r\n  if (event.shiftKey || event.ctrlKey) {\r\n    _sensibilityWS *= WSFactor;\r\n    _sensibilityAD *= ADFactor;\r\n  }\r\n\r\n  const targetPosition = camera.getFrontPosition(1);\r\n  const currentPositon = camera.position;\r\n\r\n  if (event.key === \"w\" || event.key === \"ArrowUp\" || event.key === 'W') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    camera.target.addInPlace(directionVector.multiplyByFloats(_sensibilityWS, _sensibilityWS, _sensibilityWS));\r\n  }\r\n  if (event.key === \"s\" || event.key === \"ArrowDown\" || event.key === 'S') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    camera.target.subtractInPlace(directionVector.multiplyByFloats(_sensibilityWS, _sensibilityWS, _sensibilityWS));\r\n  }\r\n  if (event.key === \"a\" || event.key === \"ArrowLeft\" || event.key === 'A') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    const rightVector = Vector3.Cross(directionVector, Vector3.Up());\r\n    camera.target.addInPlace(rightVector.multiplyByFloats(_sensibilityAD, _sensibilityAD, _sensibilityAD));\r\n  }\r\n  if (event.key === \"d\" || event.key === \"ArrowRight\" || event.key === 'D') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    const rightVector = Vector3.Cross(directionVector, Vector3.Up());\r\n    camera.target.subtractInPlace(rightVector.multiplyByFloats(_sensibilityAD, _sensibilityAD, _sensibilityAD));\r\n  }\r\n}\r\n\r\nexport const newHemisphericLight = (scene: Scene, name = \"hemisphericLight\", intensity = 1) => {\r\n  const light = new HemisphericLight(name, Vector3.Up(), scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  light.groundColor.set(0, 0, 0);\r\n  return light;\r\n}\r\n\r\nexport const newDirectionalLight = (scene: Scene, name = \"directionalLight\", direction = Vector3.Up(), intensity = 1) => {\r\n  const light = new DirectionalLight(name, direction, scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  return light;\r\n}\r\n\r\nexport const newPointLight = (scene: Scene, name = \"pointLight\", position = new Vector3(0, 0, 0), intensity = 1) => {\r\n  const light = new PointLight(name, position, scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  return light;\r\n}\r\n\r\n\r\nexport const newSpotLight = (scene: Scene, name = \"spotLight\", position = new Vector3(0, 0, 0), direction = new Vector3(0, -1, 0), angle = Math.PI / 3, exponent = 2, intensity = 1) => {\r\n  const light = new SpotLight(name, position, direction, angle, exponent, scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  return light;\r\n}","import * as React from 'react';\r\nimport {forwardRef, useEffect, useImperativeHandle} from 'react';\r\nimport {LightGizmo, PointLight, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {Stack, StackProps} from \"@mui/material\";\r\nimport {newPointLight, str2Color} from \"./3DUtils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport {MuiColorInput} from \"mui-color-input\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\ntype Props = {\r\n  lightName?: string;\r\n  scene: Scene | undefined;\r\n  updateSignal: boolean;\r\n  initialPosition?: Vector3;\r\n  initialIntensity?: number;\r\n  minX?: number;\r\n  maxX?: number;\r\n  minY?: number;\r\n  maxY?: number;\r\n  minZ?: number;\r\n  maxZ?: number;\r\n  step?: number;\r\n  minIntensity?: number;\r\n  maxIntensity?: number;\r\n  intensityStep?: number;\r\n  showControl?: boolean;\r\n} & StackProps;\r\n\r\nexport type PointLightRefType = {\r\n  getLight(): PointLight  | undefined;\r\n}\r\n\r\nexport const PointLightWithControl = forwardRef(({\r\n                                                   lightName = \"pointLight\",\r\n                                                   scene,\r\n                                                   updateSignal,\r\n                                                   initialPosition = Vector3.Zero(),\r\n                                                   initialIntensity = 1,\r\n                                                   minX = -30,\r\n                                                   maxX = 30,\r\n                                                   minY = -5,\r\n                                                   maxY = 30,\r\n                                                   minZ = -60,\r\n                                                   maxZ = 60,\r\n                                                   step = 0.1,\r\n                                                    minIntensity = 0,\r\n                                                    maxIntensity = 6,\r\n                                                    intensityStep = 0.01,\r\n                                                   showControl = true,\r\n                                                   sx, ...rest\r\n                                                 }: Props, ref) => {\r\n\r\n  const lightRef = React.useRef<PointLight>();\r\n  const lightGizmoRef = React.useRef<LightGizmo>();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      getLight() {\r\n        return lightRef.current;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [showDebug, setShowDebug] = React.useState(false);\r\n  const [intensity, setIntensity] = React.useState(initialIntensity);\r\n\r\n  const [color, setColor] = React.useState('#ffffff');\r\n  const [position, setPosition] = React.useState({\r\n    x: initialPosition?.x,\r\n    y: initialPosition?.y,\r\n    z: initialPosition?.z\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!lightGizmoRef.current || !lightRef.current) {\r\n      return;\r\n    }\r\n    if (showDebug) {\r\n      lightGizmoRef.current.attachedMesh = lightRef.current as any;\r\n      lightGizmoRef.current.light = lightRef.current;\r\n    } else {\r\n      lightGizmoRef.current.light = null;\r\n      lightGizmoRef.current.attachedMesh = null;\r\n\r\n    }\r\n  }, [showDebug]);\r\n\r\n  useEffect(() => {\r\n    if (!scene) return;\r\n    const light = lightRef.current ? lightRef.current : newPointLight(scene!, lightName, new Vector3(position.x, position.y, position.z), intensity);\r\n    if (!lightRef.current) {\r\n      lightRef.current = light;\r\n      const lightGizmo = new LightGizmo();\r\n      lightGizmoRef.current = lightGizmo;\r\n\r\n    }\r\n    const lightColor = str2Color(color);\r\n    lightRef.current.range = 100;\r\n    lightRef.current.diffuse = lightColor;\r\n    lightRef.current.specular = lightColor;\r\n    lightRef.current.intensity = intensity;\r\n    lightRef.current.position.x = position.x;\r\n    lightRef.current.position.y = position.y;\r\n    lightRef.current.position.z = position.z;\r\n  }, [color, intensity, lightName, position.x, position.y, position.z, scene, updateSignal]);\r\n\r\n  if (!scene) {\r\n    return <></>;\r\n  }\r\n  return <Stack direction={\"column\"} maxWidth={\"160px\"}\r\n                display={showControl ? \"flex\" : \"none\"}\r\n                onMouseEnter={() => setShowDebug(true)}\r\n                onMouseLeave={() => setShowDebug(false)}\r\n                spacing={1} sx={{...sx}} {...rest}>\r\n    <Typography variant={\"body1\"}>{lightName}</Typography>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color} onChange={setColor}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <LightModeIcon/>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minIntensity}\r\n          max={maxIntensity}\r\n          step={intensityStep}\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setIntensity(value as number);\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"X:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minX}\r\n          max={maxX}\r\n          step={step}\r\n          value={position.x}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setPosition({...position, x: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Y:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minY}\r\n          max={maxY}\r\n          step={step}\r\n          value={position.y}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setPosition({...position, y: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Z:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minZ}\r\n          max={maxZ}\r\n          step={step}\r\n          value={position.z}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setPosition({...position, z: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n  </Stack>\r\n});","import * as React from 'react';\r\nimport {forwardRef, useEffect, useImperativeHandle} from 'react';\r\nimport {DirectionalLight, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {Stack, StackProps} from \"@mui/material\";\r\nimport {newDirectionalLight, str2Color} from \"./3DUtils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport {MuiColorInput} from \"mui-color-input\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\ntype Props = {\r\n  lightName?: string;\r\n  scene: Scene | undefined;\r\n  updateSignal: boolean;\r\n  initialDirection?: Vector3;\r\n  initialIntensity?: number;\r\n  minX?: number;\r\n  maxX?: number;\r\n  minY?: number;\r\n  maxY?: number;\r\n  minZ?: number;\r\n  maxZ?: number;\r\n  step?: number;\r\n  minIntensity?: number;\r\n  maxIntensity?: number;\r\n  intensityStep?: number;\r\n  showControl?: boolean;\r\n  onLightAdd?: (light: DirectionalLight) => void;\r\n} & StackProps;\r\n\r\nexport type DirectionalLightRefType = {\r\n  getLight(): DirectionalLight | undefined;\r\n}\r\n\r\nexport const DirectionalLightWithControl = forwardRef(({\r\n                                                         lightName = \"directionalLight\",\r\n                                                         scene,\r\n                                                         updateSignal,\r\n                                                         initialDirection = Vector3.Zero(),\r\n                                                         initialIntensity = 1,\r\n                                                         minX = -Math.PI,\r\n                                                         maxX = Math.PI,\r\n                                                         minY = -Math.PI,\r\n                                                         maxY = Math.PI,\r\n                                                         minZ = -Math.PI,\r\n                                                         maxZ = Math.PI,\r\n                                                         step = 0.01,\r\n                                                         minIntensity = 0,\r\n                                                         maxIntensity = 3,\r\n                                                         intensityStep = 0.01,\r\n                                                         showControl = true,\r\n                                                         sx, ...rest\r\n                                                       }: Props, ref) => {\r\n\r\n  const lightRef = React.useRef<DirectionalLight>();\r\n  // const lightGizmoRef = React.useRef<LightGizmo>();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      getLight() {\r\n        return lightRef.current;\r\n      }\r\n    }\r\n  }, [lightRef.current, lightRef]);\r\n\r\n  const [showDebug, setShowDebug] = React.useState(false);\r\n  const [intensity, setIntensity] = React.useState(initialIntensity);\r\n  const [color, setColor] = React.useState('#ffffff');\r\n  const [direction, setDirection] = React.useState({\r\n    x: initialDirection?.x,\r\n    y: initialDirection?.y,\r\n    z: initialDirection?.z\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (!lightGizmoRef.current || !lightRef.current) {\r\n  //     return;\r\n  //   }\r\n  //   print(\"showDebug\", showDebug);\r\n  //   if (showDebug) {\r\n  //     lightGizmoRef.current.attachedMesh = lightRef.current as any;\r\n  //     lightGizmoRef.current.light = lightRef.current;\r\n  //   } else {\r\n  //     lightGizmoRef.current.light = null;\r\n  //     lightGizmoRef.current.attachedMesh = null;\r\n  //\r\n  //   }\r\n  // }, [showDebug]);\r\n\r\n  useEffect(() => {\r\n    if (!scene) return;\r\n    const light = lightRef.current ? lightRef.current : newDirectionalLight(scene!, lightName, new Vector3(0, 0, 0), 1);\r\n    if (!lightRef.current) {\r\n      lightRef.current = light;\r\n      if (rest.onLightAdd) {\r\n        rest.onLightAdd(light);\r\n      }\r\n      // lightGizmoRef.current = new LightGizmo();\r\n\r\n    }\r\n    const lightColor = str2Color(color);\r\n    lightRef.current.diffuse = lightColor;\r\n    lightRef.current.specular = lightColor;\r\n    lightRef.current.intensity = intensity;\r\n    lightRef.current.direction.x = direction.x;\r\n    lightRef.current.direction.y = direction.y;\r\n    lightRef.current.direction.z = direction.z;\r\n  }, [color, intensity, lightName, direction.x, direction.y, direction.z, scene, updateSignal]);\r\n\r\n  if (!scene) {\r\n    return <></>;\r\n  }\r\n  return <Stack direction={\"column\"} maxWidth={\"160px\"}\r\n                display={showControl ? \"flex\" : \"none\"}\r\n                onMouseEnter={() => setShowDebug(true)}\r\n                onMouseLeave={() => setShowDebug(false)}\r\n                spacing={1} sx={{...sx}} {...rest}>\r\n    <Typography variant={\"body1\"}>{lightName}</Typography>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color} onChange={setColor}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <LightModeIcon/>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minIntensity}\r\n          max={maxIntensity}\r\n          step={intensityStep}\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setIntensity(value as number);\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"X:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minX}\r\n          max={maxX}\r\n          step={step}\r\n          value={direction.x}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setDirection({...direction, x: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Y:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minY}\r\n          max={maxY}\r\n          step={step}\r\n          value={direction.y}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setDirection({...direction, y: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Z:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minZ}\r\n          max={maxZ}\r\n          step={step}\r\n          value={direction.z}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setDirection({...direction, z: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n  </Stack>\r\n});","import * as React from 'react';\r\nimport {forwardRef, useEffect, useImperativeHandle} from 'react';\r\nimport {HemisphericLight, Scene} from \"@babylonjs/core\";\r\nimport {Stack, StackProps} from \"@mui/material\";\r\nimport {newHemisphericLight, str2Color} from \"./3DUtils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport {MuiColorInput} from \"mui-color-input\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\ntype Props = {\r\n  lightName?: string;\r\n  scene: Scene | undefined;\r\n  updateSignal: boolean;\r\n  showControl?: boolean;\r\n  step?: number;\r\n  linkEnvironment?: boolean;\r\n  initialIntensity?: number;\r\n  minIntensity?: number;\r\n  maxIntensity?: number;\r\n  intensityStep?: number;\r\n} & StackProps;\r\n\r\nexport type HemisphericLightRefType = {\r\n  getLight(): HemisphericLight  | undefined;\r\n}\r\n\r\nexport const HemisphericLightWithControl = forwardRef(({\r\n                                              lightName = \"hemisphericLight\",\r\n                                              scene,\r\n                                              updateSignal,\r\n                                              initialIntensity = 1,\r\n                                              showControl = true,\r\n                                              step = 0.1,\r\n                                                         minIntensity = 0,\r\n                                                         maxIntensity = 1.5,\r\n                                                         intensityStep = 0.01,\r\n                                              linkEnvironment = true,\r\n                                              sx, ...rest\r\n                                            }: Props, ref) => {\r\n\r\n  const lightRef = React.useRef<HemisphericLight>();\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      getLight() {\r\n        return lightRef.current;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const [intensity, setIntensity] = React.useState(initialIntensity);\r\n\r\n  const [color, setColor] = React.useState('#ffffff');\r\n  const [color2, setColor2] = React.useState('#000000');\r\n\r\n\r\n  useEffect(() => {\r\n    if (!scene) return;\r\n    const light = lightRef.current ? lightRef.current : newHemisphericLight(scene!, lightName, intensity);\r\n    if (!lightRef.current) {\r\n      lightRef.current = light;\r\n\r\n    }\r\n    const lightColor = str2Color(color);\r\n    const groundColor = str2Color(color2);\r\n    lightRef.current.diffuse = lightColor;\r\n    lightRef.current.specular = lightColor;\r\n    lightRef.current.intensity = intensity;\r\n    lightRef.current.groundColor = groundColor;\r\n    if (linkEnvironment) {\r\n      scene.environmentIntensity = intensity;\r\n    }\r\n\r\n  }, [color, color2, intensity, lightName, scene, updateSignal]);\r\n\r\n  if (!scene) {\r\n    return <></>;\r\n  }\r\n  return <Stack direction={\"column\"} maxWidth={\"160px\"}\r\n                display={showControl ? \"flex\" : \"none\"}\r\n                spacing={1} sx={{...sx}} {...rest}>\r\n    <Typography variant={\"body1\"}>{lightName}</Typography>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color} onChange={setColor}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color2} onChange={setColor2}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <LightModeIcon/>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minIntensity}\r\n          max={maxIntensity}\r\n          step={intensityStep}\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setIntensity(value as number);\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n  </Stack>\r\n});","import * as React from 'react';\r\nimport {useCallback} from 'react';\r\nimport {\r\n  Camera,\r\n  Color3,\r\n  HDRCubeTexture,\r\n  loadAssetContainerAsync,\r\n  MeshBuilder,\r\n  MirrorTexture,\r\n  PBRMaterial,\r\n  Plane,\r\n  Scene,\r\n  ShadowGenerator,\r\n  TransformNode,\r\n  Vector3,\r\n} from \"@babylonjs/core\";\r\nimport BabyLonCanvas from \"./BabyLonCanvas\";\r\nimport Ammo from 'ammojs-typed';\r\nimport \"babylon-mmd/esm/Loader/pmxLoader\";\r\nimport {isMobile} from \"react-device-detect\";\r\nimport {MmdAmmoJSPlugin, MmdAmmoPhysics, MmdMesh, MmdRuntime, VmdLoader} from \"babylon-mmd\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport {Stack} from \"@mui/material\";\r\nimport {ResourceType} from \"../../../../proto/framework/ResourceMessage\";\r\nimport {getObjectId} from \"../../../../api/util/StringUtil\";\r\nimport {MmdModel} from \"babylon-mmd/esm/Runtime/mmdModel\";\r\nimport {newArcRotateCameraWithControls, newAudioPlayer, WASDCameraControls} from \"./3DUtils\";\r\nimport {PointLightRefType, PointLightWithControl} from \"./PointLightWithControl\";\r\nimport {DirectionalLightRefType, DirectionalLightWithControl} from \"./DirectionLightWithControl\";\r\nimport {HemisphericLightRefType, HemisphericLightWithControl} from \"./HemisphericLightWithControl\";\r\nimport {WebPageContainer} from \"../../../../component/container/WebPageContainer\";\r\nimport {print} from \"../../../../api/util/Logging\";\r\nimport {GroundMesh} from \"@babylonjs/core/Meshes/groundMesh\";\r\nimport FeedbackWidget from \"../../component/FeedbackWidget\";\r\n\r\nconst widgetId = getObjectId(301);\r\n\r\nconst BabyLonMmd = () => {\r\n\r\n  const [play, setPlay] = React.useState(false);\r\n  const [updateSingal, setUpdateSignal] = React.useState(false);\r\n\r\n  const sceneRef = React.useRef<Scene>();\r\n  const mmdRuntimeRef = React.useRef<MmdRuntime>();\r\n  // const cameraRef = React.useRef<TargetCamera>();\r\n  const hemisphericLightRef = React.useRef<HemisphericLightRefType>();\r\n  const directionalLightRef = React.useRef<DirectionalLightRefType>();\r\n  const pointLightRef = React.useRef<PointLightRefType>();\r\n\r\n  const mmdModelRef = React.useRef<MmdModel>();\r\n  const skyRef = React.useRef<HDRCubeTexture>();\r\n  const cameraRef = React.useRef<Camera>();\r\n  const groundRef = React.useRef<GroundMesh>();\r\n  const mmdMeshRef = React.useRef<MmdMesh>();\r\n\r\n  // useEffect(() => {\r\n  //   if (!sceneRef.current) {\r\n  //     return;\r\n  //   }\r\n  //   const scene = sceneRef.current;\r\n  //\r\n  //   void debugObject(scene, \"center1\", new Vector3(0, 0, 0), new Color3(0, 0, 0), 1);\r\n  //   void debugObject(scene, \"center2\", new Vector3(0, 10, 0), new Color3(0, 1, 0), 1);\r\n  //   void debugObject(scene, \"center3\", new Vector3(0, 0, 10), new Color3(0, 0, 1), 1);\r\n  //   void debugObject(scene, \"center4\", new Vector3(10, 0, 0), new Color3(1, 0, 0), 1);\r\n  //\r\n  // }, [sceneRef]);\r\n\r\n\r\n  const onSceneReady = useCallback(async (scene: Scene) => {\r\n\r\n\r\n    // scene.clearColor = new Color4(0.95, 0.95, 0.95, 1.0);\r\n    // scene.clearColor = new Color4(0.95, 0.95, 0.95, 0.0);\r\n    // scene.ambientColor = new Color3(0.5, 0.5, 0.5); // mmd scale material ambient color to 0.5. for same result, set ambient color to 0.5\r\n    scene.ambientColor = new Color3(0.5, 0.5, 0.5); // mmd scale material ambient color to 0.5. for same result, set ambient color to 0.5\r\n\r\n    // const camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n    // // This targets the camera to scene origin\r\n    // camera.setTarget(Vector3.Zero());\r\n    const canvas = scene.getEngine().getRenderingCanvas();\r\n    sceneRef.current = scene;\r\n    setUpdateSignal(!updateSingal);\r\n\r\n    const camera = newArcRotateCameraWithControls(scene, canvas, new Vector3(0, 10, 20), \"arcCamera\", new Vector3(0, 10, -20));\r\n    // cameraRef.current = camera;\r\n    window.onkeydown = (event) => {\r\n      WASDCameraControls(camera, event);\r\n    }\r\n\r\n    // const mmdCamera = new MmdCamera(\"mmdCamera\", new Vector3(0, 10, 0), scene);\r\n    // mmdCamera.maxZ = 300;\r\n    // mmdCamera.minZ = 1;\r\n    // mmdCamera.parent = mmdRoot;\r\n    // mmdCamera.attachControl(canvas, true);\r\n    // print(\"mmdCamera\", mmdCamera);\r\n    // scene.activeCamera = mmdCamera;\r\n\r\n    const activeCamera = camera;\r\n    scene.activeCamera = activeCamera;\r\n    cameraRef.current = activeCamera;\r\n\r\n\r\n    // const hemisphericLight = newHemisphericLight(scene, \"hemisphericLight\", 0.3);\r\n    // hemisphericLightRef.current = hemisphericLight;\r\n\r\n\r\n    //\r\n    if (!isMobile) {\r\n      const texture = new HDRCubeTexture(\"/mmd/res/ocean_view_balcony_4k.hdr\", scene, 512, false, true, false, true);\r\n      texture.rotationY = Math.PI / 2 * 3;\r\n      // texture.level = 0.7; // intensity\r\n      // scene.environmentTexture = texture;\r\n      skyRef.current = texture;\r\n      const skybox = scene.createDefaultSkybox(texture, true, 1000);\r\n      skybox!.rotation.y = Math.PI / 2 * 3;\r\n    }\r\n\r\n\r\n    const ground = MeshBuilder.CreateGround(\"ground1\", {\r\n      width: 60,\r\n      height: 60,\r\n      subdivisions: 1,\r\n      updatable: false\r\n    }, scene);\r\n    // ground.receiveShadows = true;\r\n    ground.position.y = 0.01;\r\n    ground.position.z = 20;\r\n    groundRef.current = ground;\r\n    // // ground\r\n\r\n    // const ground = CreateGround(\"ground1\", { width: 100, height: 100, subdivisions: 2, updatable: false }, scene);\r\n    // const shadowOnlyMaterial = ground.material = new StandardMaterial(\"shadowOnly\", scene);\r\n    //\r\n    // shadowOnlyMaterial.alpha = 0.4;\r\n    ground.receiveShadows = true;\r\n\r\n\r\n    const mirrorMaterial = new PBRMaterial(\"mirrorMaterial\", scene);\r\n\r\n    const mirrorTexture = new MirrorTexture(\"mirror\", {ratio: 1.0}, scene, true);\r\n    mirrorTexture.mirrorPlane = new Plane(0, -1, 0, 0);  // Adjust normal direction for correct reflection\r\n    mirrorTexture.renderList = scene.meshes; // Add objects to reflect in the mirror\r\n\r\n\r\n    // Set reflectivity to maximum for a mirror-like surface\r\n    mirrorMaterial.reflectionTexture = mirrorTexture;\r\n    mirrorMaterial.metallic = 1.0;\r\n    mirrorMaterial.roughness = 0.0;\r\n\r\n    // mirrorMaterial.metallic = 0.0;\r\n    // mirrorMaterial.roughness = 1.0;\r\n\r\n    // mirrorMaterial.reflectionTexture = scene.environmentTexture;\r\n    ground.material = mirrorMaterial;\r\n\r\n\r\n    const vmdLoader = new VmdLoader(scene);\r\n    // const modelMotion = await vmdLoader.loadAsync(\"model_motion_1\", [\r\n    //   \"/mmd/motion/jimingyue-motion.vmd\",\r\n    // ]);\r\n\r\n    // const cameraMotion = await vmdLoader.loadAsync(\"camera_motion_1\",\r\n    //     \"res/メランコリ・ナイト/メランコリ・ナイト_カメラ.vmd\"\r\n    // );\r\n    // camera.addAnimation(cameraMotion);\r\n    // camera.setAnimation(\"camera_motion_1\");\r\n    const [mmdMesh, stageMesh, modelMotion, physicsPlugin] = await Promise.all([\r\n      loadAssetContainerAsync(\"/mmd/原神-刻晴/刻晴fix.pmx\", scene)\r\n      .then((result) => {\r\n        result.addAllToScene();\r\n        return result.meshes[0] as MmdMesh;\r\n      }).catch((e) => {\r\n        console.error(e);\r\n      }),\r\n      loadAssetContainerAsync(\"/mmd/RedialC_AloneTai/AloneTai.pmx\", scene)\r\n      .then((result) => {\r\n        result.addAllToScene();\r\n        return result.meshes[0] as MmdMesh;\r\n      }).catch((e) => {\r\n        console.error(e);\r\n      }),\r\n      vmdLoader.loadAsync(\"model_motion_1\", [\r\n        \"/mmd/motion/jimingyue-motion.vmd\",\r\n      ]),\r\n      Ammo().then((ammo: any) => {\r\n        return new MmdAmmoJSPlugin(true, ammo);\r\n      }).catch((e: any) => {\r\n        console.error(e);\r\n      }),\r\n      // Use HavokPhysics by uncommenting the following code and commenting out the Ammo physics engine.\r\n      // HavokPhysics().then((physicsInstance) => {\r\n      //   return new HavokPlugin(true, physicsInstance);\r\n      // }).catch((e) => {\r\n      //   console.error(e);\r\n      // }),\r\n    ]);\r\n\r\n    if (!mmdMesh || !modelMotion || !physicsPlugin || !stageMesh) {\r\n      return;\r\n    }\r\n\r\n    mmdMeshRef.current = mmdMesh;\r\n    print(\"mmdMesh\", mmdMeshRef.current, directionalLightRef.current);\r\n    mmdMesh.renderingGroupId = 1;\r\n    stageMesh.renderingGroupId = 1;\r\n\r\n    scene.enablePhysics(new Vector3(0, -9.8, 0), physicsPlugin);\r\n\r\n    // create mmd runtime with physics\r\n    // const mmdRuntime = new MmdRuntime(scene, new MmdPhysics(scene)); // `MmdPhysics` use Havok physics engine for solve rigid body simulation  new MmdPhysics(scene)\r\n    const mmdRuntime = new MmdRuntime(scene, new MmdAmmoPhysics(scene)); // `MmdPhysics` use Ammo physics engine for solve rigid body simulation  new MmdPhysics(scene)\r\n\r\n\r\n    //since Havok is not used by MMD, this may cause some weird behavior on physics simulation.\r\n    mmdRuntimeRef.current = mmdRuntime;\r\n\r\n    mmdRuntime.register(scene);\r\n    void mmdRuntime.setAudioPlayer(newAudioPlayer(scene, \"mmd/music/寄明月.mp3\"));\r\n    // mmdRuntime.setCamera(mmdCamera);\r\n\r\n    // A way to attach the model to a bone\r\n    const mmdRoot = new TransformNode(\"mmdRoot\", scene);\r\n    mmdRoot.position.z = 20;\r\n    mmdMesh.parent = mmdRoot;\r\n    stageMesh.parent = mmdRoot;\r\n\r\n    stageMesh.position.z = -80;\r\n\r\n\r\n    for (const mesh of mmdMesh.metadata.meshes) {\r\n      mesh.receiveShadows = true;\r\n    }\r\n    for (const mesh of stageMesh.metadata.meshes) {\r\n      mesh.receiveShadows = true;\r\n    }\r\n\r\n    // scene.onBeforeRenderObservable.addOnce(() => {\r\n    // notworking\r\n    //   print(\"directionalLightRef.current\", directionalLightRef.current);\r\n    //   const shadowGenerator = new ShadowGenerator(2048 * 2, directionalLightRef.current!, true, activeCamera);\r\n    //   shadowGenerator.transparencyShadow = true;\r\n    //   shadowGenerator.bias = 0.01;\r\n    //   shadowGenerator.addShadowCaster(ground);\r\n    //   shadowGenerator.addShadowCaster(mmdMesh);\r\n    //   print(\"added fog\")\r\n    // });\r\n\r\n\r\n    // mmdRuntime.setCamera(mmdCamera);\r\n    const mmdModel = mmdRuntime.createMmdModel(mmdMesh);\r\n    mmdModelRef.current = mmdModel;\r\n\r\n    mmdModel.addAnimation(modelMotion);\r\n    mmdModel.setAnimation(\"model_motion_1\");\r\n\r\n\r\n    // make sure directional light follow the model\r\n    // const bodyBone = mmdModel.runtimeBones.find((bone) => bone.name === \"センター\");\r\n    // const boneWorldMatrix = new Matrix();\r\n\r\n    // scene.onBeforeRenderObservable.add(() => {\r\n    //   bodyBone!.getWorldMatrixToRef(boneWorldMatrix).multiplyToRef(mmdMesh.getWorldMatrix(), boneWorldMatrix);\r\n    //   boneWorldMatrix.getTranslationToRef(directionalLight.position);\r\n    //   directionalLight.position.y -= 10;\r\n    // });\r\n\r\n    // create youtube like player control\r\n    // const mmdPlayerControl = new MmdPlayerControl(scene, mmdRuntime, audioPlayer);\r\n    // mmdPlayerControl.showPlayerControl();\r\n\r\n    // add shadow\r\n    if (directionalLightRef.current?.getLight()) {\r\n      const shadowGenerator = new ShadowGenerator(2048, directionalLightRef.current?.getLight()!, true, activeCamera);\r\n      shadowGenerator.transparencyShadow = true;\r\n      shadowGenerator.bias = 0.001;\r\n      shadowGenerator.darkness = 0;\r\n      shadowGenerator.addShadowCaster(ground);\r\n      shadowGenerator.addShadowCaster(mmdMesh);\r\n      shadowGenerator.addShadowCaster(stageMesh);\r\n    }\r\n    // shadowOnlyMaterial = directionalLightRef.current.getLight();\r\n\r\n    if (pointLightRef.current?.getLight()) {\r\n      const shadowGenerator2 = new ShadowGenerator(2048, pointLightRef.current?.getLight()!, true, activeCamera);\r\n      shadowGenerator2.transparencyShadow = true;\r\n      shadowGenerator2.bias = 0.001;\r\n      shadowGenerator2.darkness = 0;\r\n      shadowGenerator2.addShadowCaster(ground);\r\n      shadowGenerator2.addShadowCaster(mmdMesh);\r\n      shadowGenerator2.addShadowCaster(stageMesh);\r\n    }\r\n\r\n    print(\"Added shadow\");\r\n\r\n  }, []);\r\n\r\n  /**\r\n   * Will run on every frame render.\r\n   */\r\n  const onRender = useCallback((scene: Scene) => {\r\n    // if (mmdModelRef.current && mmdRuntimeRef.current && mmdRuntimeRef.current.isAnimationPlaying) {\r\n    //   mmdModelRef.current.runtimeBones.forEach((bone) => {\r\n    //     if (bone.name === \"lcf_5_1\") {\r\n    //       // bone.transformAfterPhysics\r\n    //       print(bone.name, bone.worldMatrix, mmdRuntimeRef.current?.currentFrameTime);\r\n    //     }\r\n    //   });\r\n    // }\r\n\r\n    if (mmdRuntimeRef.current) {\r\n      if (mmdRuntimeRef.current.currentFrameTime >= mmdRuntimeRef.current.animationFrameTimeDuration) {\r\n        // mmdRuntimeRef.current.playAnimation();\r\n        mmdRuntimeRef.current.seekAnimation(0);\r\n        mmdRuntimeRef.current.playAnimation();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n\r\n  return <><BabyLonCanvas antialias onSceneReady={onSceneReady} onRender={onRender} id=\"my-canvas\">\r\n    <Stack direction={\"row\"} justifyContent={\"space-around\"} alignItems={\"flex-start\"}\r\n           sx={{marginX: 2}}>\r\n      <HemisphericLightWithControl scene={sceneRef.current} updateSignal={updateSingal}\r\n                                   ref={hemisphericLightRef}\r\n                                   initialIntensity={0.6}/>\r\n      <DirectionalLightWithControl scene={sceneRef.current} updateSignal={updateSingal}\r\n                                   ref={directionalLightRef}\r\n                                   initialIntensity={0.36}\r\n                                   initialDirection={new Vector3(0.5, -1, 1)}\r\n      />\r\n      <PointLightWithControl scene={sceneRef.current} updateSignal={updateSingal}\r\n                             ref={pointLightRef}\r\n                             initialIntensity={0.8}\r\n                             initialPosition={new Vector3(3, 15, -10)}/>\r\n    </Stack>\r\n  </BabyLonCanvas>\r\n\r\n    <Fab color=\"primary\" aria-label=\"add\" onClick={() => {\r\n      if (mmdRuntimeRef.current) {\r\n        if (!play) {\r\n          mmdRuntimeRef.current.playAnimation();\r\n        } else {\r\n          mmdRuntimeRef.current.pauseAnimation();\r\n        }\r\n      }\r\n      setPlay(!play);\r\n    }} style={{\r\n      margin: 0,\r\n      left: 20,\r\n      top: 20,\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      position: 'fixed'\r\n    }}>\r\n      {play ? <PauseIcon/> : <PlayArrowIcon/>}\r\n    </Fab>\r\n    <WebPageContainer spacing={2}>\r\n      <Typography>Model BY: miHoYo/观海子, Motion By: Nivsha, Stage By: RedialC</Typography>\r\n\r\n      <FeedbackWidget resourceId={widgetId} resourceType={ResourceType.RESOURCE_TYPE_WEBPAGE}/>\r\n    </WebPageContainer>\r\n  </>\r\n};\r\n\r\nexport default BabyLonMmd;"],"names":["WebPageContainer","_ref","sx","rest","_jsx","Stack","direction","marginTop","marginBottom","marginX","xs","sm","md","lg","xl","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","children","reactCanvas","useRef","useEffect","canvas","current","engine","Engine","setHardwareScalingLevel","window","devicePixelRatio","scene","Scene","isReady","onReadyObservable","addOnce","e","console","error","runRenderLoop","render","resize","getEngine","addEventListener","dispose","log","removeEventListener","_jsxs","_Fragment","ref","style","backgroundColor","height","width","str2Color","str","color","replace","r","parseInt","substring","g","b","Color3","PointLightWithControl","forwardRef","lightName","updateSignal","initialPosition","Vector3","Zero","initialIntensity","minX","maxX","minY","maxY","minZ","maxZ","step","minIntensity","maxIntensity","intensityStep","showControl","lightRef","React","lightGizmoRef","useImperativeHandle","getLight","showDebug","setShowDebug","intensity","setIntensity","setColor","position","setPosition","x","y","z","attachedMesh","light","name","arguments","length","undefined","PointLight","diffuse","set","specular","newPointLight","lightGizmo","LightGizmo","lightColor","range","maxWidth","display","onMouseEnter","onMouseLeave","spacing","Typography","variant","alignItems","ColorLensIcon","MuiColorInput","size","margin","adornmentPosition","padding","hiddenLabel","format","value","onChange","LightModeIcon","Slider","min","max","valueLabelDisplay","event","enableTranslate","DirectionalLightWithControl","initialDirection","Math","PI","setDirection","Up","DirectionalLight","newDirectionalLight","onLightAdd","HemisphericLightWithControl","linkEnvironment","color2","setColor2","HemisphericLight","groundColor","newHemisphericLight","environmentIntensity","widgetId","getObjectId","BabyLonMmd","play","setPlay","updateSingal","setUpdateSignal","sceneRef","mmdRuntimeRef","hemisphericLightRef","directionalLightRef","pointLightRef","mmdModelRef","skyRef","cameraRef","groundRef","mmdMeshRef","useCallback","async","_directionalLightRef$","_pointLightRef$curren","ambientColor","getRenderingCanvas","camera","target","radius","subtract","ArcRotateCamera","attachControl","wheelDeltaPercentage","panningSensibility","angularSensibilityX","angularSensibilityY","newArcRotateCameraWithControls","onkeydown","WSFactor","ADFactor","_sensibilityWS","_sensibilityAD","shiftKey","ctrlKey","targetPosition","getFrontPosition","currentPositon","key","directionVector","addInPlace","multiplyByFloats","subtractInPlace","rightVector","Cross","WASDCameraControls","activeCamera","isMobile","texture","HDRCubeTexture","rotationY","createDefaultSkybox","rotation","ground","MeshBuilder","CreateGround","subdivisions","updatable","receiveShadows","mirrorMaterial","PBRMaterial","mirrorTexture","MirrorTexture","ratio","mirrorPlane","Plane","renderList","meshes","reflectionTexture","metallic","roughness","material","vmdLoader","VmdLoader","mmdMesh","stageMesh","modelMotion","physicsPlugin","Promise","all","loadAssetContainerAsync","then","result","addAllToScene","catch","loadAsync","Ammo","ammo","MmdAmmoJSPlugin","print","renderingGroupId","enablePhysics","mmdRuntime","MmdRuntime","MmdAmmoPhysics","register","setAudioPlayer","newAudioPlayer","path","audioPlayer","StreamAudioPlayer","source","mmdRoot","TransformNode","parent","mesh","metadata","mmdModel","createMmdModel","addAnimation","setAnimation","_directionalLightRef$2","shadowGenerator","ShadowGenerator","transparencyShadow","bias","darkness","addShadowCaster","_pointLightRef$curren2","shadowGenerator2","currentFrameTime","animationFrameTimeDuration","seekAnimation","playAnimation","BabyLonCanvas","id","justifyContent","Fab","onClick","pauseAnimation","left","top","right","bottom","PauseIcon","PlayArrowIcon","FeedbackWidget","resourceId","resourceType","ResourceType","RESOURCE_TYPE_WEBPAGE"],"sourceRoot":""}