{"version":3,"file":"static/js/187.750d532d.chunk.js","mappings":"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","sources":["component/container/WebPageContainer.tsx","domain/website/page/3D/BabyLonCanvas.tsx","domain/website/page/3D/3DUtils.ts","domain/website/page/3D/PointLightWithControl.tsx","domain/website/page/3D/DirectionLightWithControl.tsx","domain/website/page/3D/HemisphericLightWithControl.tsx","domain/website/page/3D/BabyLonMMD.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {Stack, StackProps} from \"@mui/material\";\r\n\r\n\r\nexport const WebPageContainer = ({sx, ...rest}: StackProps) => {\r\n  return <Stack direction={\"column\"} sx={{\r\n    marginTop: 4,\r\n    marginBottom: 8,\r\n    marginX: {\r\n      xs: 0,\r\n      sm: 2,\r\n      md: 6,\r\n      lg: 24,\r\n      xl: 48\r\n    },\r\n    ...sx\r\n  }}\r\n                {...rest}>\r\n  </Stack>\r\n};","import * as React from 'react';\r\nimport {useEffect, useRef} from 'react';\r\nimport {Engine, EngineOptions, Scene, SceneOptions} from \"@babylonjs/core\";\r\n\r\nconst BabyLonCanvas = ({\r\n                         antialias = true,\r\n                         engineOptions,\r\n                         adaptToDeviceRatio,\r\n                         sceneOptions,\r\n                         onRender,\r\n                         onSceneReady = () => {\r\n                         },\r\n                         children,\r\n                         ...rest\r\n                       }: {\r\n  antialias?: boolean,\r\n  engineOptions?: EngineOptions,\r\n  adaptToDeviceRatio?: boolean,\r\n  sceneOptions?: SceneOptions,\r\n  onRender?: (scene: Scene) => void,\r\n  onSceneReady?: (scene: Scene) => any,\r\n  [key: string]: any\r\n}) => {\r\n  const reactCanvas = useRef(null);\r\n\r\n  // set up basic engine and scene\r\n  useEffect(() => {\r\n    const canvas = reactCanvas.current;\r\n\r\n    if (!canvas) return;\r\n\r\n    const engine = new Engine(canvas, antialias, engineOptions, adaptToDeviceRatio);\r\n    engine.setHardwareScalingLevel(1 / window.devicePixelRatio);\r\n    const scene = new Scene(engine, sceneOptions);\r\n    if (scene.isReady()) {\r\n      onSceneReady(scene);\r\n    } else {\r\n      try {\r\n        scene.onReadyObservable.addOnce((scene) => {\r\n          try {\r\n            onSceneReady(scene);\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n    engine.runRenderLoop(() => {\r\n      if (typeof onRender === \"function\") onRender(scene);\r\n      scene.render();\r\n    });\r\n\r\n    const resize = () => {\r\n      scene.getEngine().resize();\r\n      // console.log(\"listener : \" + window.innerWidth + \" , \" + window.innerHeight);\r\n    };\r\n\r\n    if (window) {\r\n      window.addEventListener(\"resize\", resize);\r\n    }\r\n\r\n    return () => {\r\n      try {\r\n        if (scene && scene.getEngine()) {\r\n\r\n          scene.getEngine().dispose();\r\n        }\r\n      } catch (e) {\r\n\r\n        console.log(e);\r\n      }\r\n\r\n      if (window) {\r\n        window.removeEventListener(\"resize\", resize);\r\n      }\r\n    };\r\n  }, [antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady]);\r\n\r\n  return <><canvas ref={reactCanvas}\r\n                 style={{backgroundColor: \"black\", height: \"100svh\", width: \"100%\"}} {...rest} />\r\n    {children}\r\n  </>;\r\n};\r\n\r\nexport default BabyLonCanvas;","import {\r\n  ArcRotateCamera,\r\n  Color3,\r\n  DirectionalLight,\r\n  HemisphericLight,\r\n  MeshBuilder,\r\n  PointLight,\r\n  Scene,\r\n  SpotLight,\r\n  StandardMaterial,\r\n  UniversalCamera,\r\n  Vector3\r\n} from \"@babylonjs/core\";\r\nimport {TargetCamera} from \"@babylonjs/core/Cameras/targetCamera\";\r\nimport {StreamAudioPlayer} from \"babylon-mmd\";\r\n\r\n// convert Color3 to '#ffffff', r,g,b are 0-1\r\nexport const color2Str = (color: Color3) => {\r\n  const r = Math.floor(color.r * 255).toString(16).padStart(2, '0');\r\n  const g = Math.floor(color.g * 255).toString(16).padStart(2, '0');\r\n  const b = Math.floor(color.b * 255).toString(16).padStart(2, '0');\r\n  return `#${r}${g}${b}`;\r\n}\r\n\r\nexport const str2Color = (str: string) => {\r\n  // convert '#ffffff' to Color3\r\n  const color = str.replace('#', '');\r\n  const r = parseInt(color.substring(0, 2), 16) / 255;\r\n  const g = parseInt(color.substring(2, 4), 16) / 255;\r\n  const b = parseInt(color.substring(4, 6), 16) / 255;\r\n  return new Color3(r, g, b);\r\n}\r\n\r\nexport const valueMapToRange = (valueIn100: number, minValue: number, maxValue: number) => {\r\n  return (maxValue - minValue) * valueIn100 / 100 + minValue;\r\n}\r\n// normalize a value to 0-100\r\nexport const normalizeValue = (value:number, minValue: number, maxValue: number) => {\r\n  return (value - minValue) * 100 / (maxValue - minValue);\r\n}\r\n\r\nexport const newAudioPlayer = (scene: Scene, path: string) => {\r\n  const audioPlayer = new StreamAudioPlayer(scene);\r\n  audioPlayer.source = path;\r\n  return audioPlayer;\r\n}\r\n\r\nexport const debugObject = (scene: Scene, name: string, position: Vector3, color: Color3, radius = 1,) => {\r\n  // add a sphere to show the position of the object\r\n  const sphere = MeshBuilder.CreateSphere(name, {diameter: radius}, scene);\r\n  sphere.position = position;\r\n  const mat = new StandardMaterial(name + \"_mat\", scene);\r\n  mat.diffuseColor = color;\r\n\r\n  // material only handles 4 lights in the scene by default, so increase the number of lights\r\n  // mat.maxSimultaneousLights = 6;\r\n\r\n  sphere.material = mat;\r\n\r\n  return sphere;\r\n}\r\n\r\nexport const newArcRotateCameraWithControls = (scene: Scene, canvas: any, target: Vector3, name = \"arcCamera\", initialPosition?: Vector3) => {\r\n  const position = initialPosition ? initialPosition : new Vector3(0, 0, 0);\r\n  const radius = target.subtract(position).length();\r\n  const camera = new ArcRotateCamera(\r\n      name,\r\n      0, //-Math.PI / 2,             // Alpha (horizontal rotation)\r\n      0, //Math.PI / 2,             // Beta (vertical rotation)\r\n      radius,                      // Radius (distance from target)\r\n      target,  // Target (point to orbit around)\r\n      scene\r\n  );\r\n  camera.setPosition(position);\r\n  // 最大距离\r\n  camera.maxZ = 1000;\r\n\r\n  // 旋转控制\r\n  // camera.keysUp.push(87);    // W key\r\n  // camera.keysDown.push(83);  // S key\r\n  // camera.keysLeft.push(65);  // A key\r\n  // camera.keysRight.push(68); // D key\r\n\r\n  // Attach the camera to the canvas for mouse controls\r\n  camera.attachControl(canvas, true, true);\r\n  // camera.panningAxis = new Vector3(-1, -1, 1);\r\n  camera.invertRotation = true;\r\n\r\n  // Customize camera control settings to resemble Three.js OrbitControls\r\n  // camera.lowerBetaLimit = 0.1;            // Limit vertical rotation (prevents flipping)\r\n  // camera.upperBetaLimit = Math.PI / 2;    // Limit vertical rotation to halfway\r\n  // camera.lowerRadiusLimit = 2;            // Minimum zoom (prevents getting too close)\r\n  // camera.upperRadiusLimit = 50;           // Maximum zoom (prevents zooming out too far)\r\n  camera.wheelDeltaPercentage = 0.01;     // Zoom sensitivity\r\n  camera.panningSensibility = 200;         // Pan sensitivity\r\n  camera.angularSensibilityX = 6000;      // Mouse rotation sensitivity (horizontal)\r\n  camera.angularSensibilityY = 6000;      // Mouse rotation sensitivity (vertical)\r\n\r\n  return camera;\r\n}\r\n\r\nexport const newUniversalCameraWithControls = (scene: Scene, canvas: any, name = \"universalCamera\") => {\r\n  const universalCamera = new UniversalCamera(name, new Vector3(0, 10, -15), scene);\r\n  universalCamera.setTarget(new Vector3(0, 10, 0));\r\n  universalCamera.attachControl(canvas, true);\r\n  universalCamera.keysRotateRight.push(69); // E key\r\n  universalCamera.keysDownward.push(16); // shift key\r\n  universalCamera.keysDownward.push(17); // ctrl key\r\n  universalCamera.keysUpward.push(32); // space key\r\n  universalCamera.keysRotateLeft.push(81); // Q key\r\n  universalCamera.keysLeft.push(65);  // A key\r\n  universalCamera.keysRight.push(68); // D key\r\n  universalCamera.keysUp.push(87);    // W key\r\n  universalCamera.keysDown.push(83);  // S key\r\n  return universalCamera;\r\n}\r\n\r\n// WASD控制相机 WS控制前后移动，AD控制左右移动 WSFactor和ADFactor是指按下shift/ctrl时的移动速度的倍率\r\nexport const WASDCameraControls = (camera: TargetCamera | undefined, event: KeyboardEvent, sensibilityWS = 1, sensibilityAD = 0.1, WSFactor = 5, ADFactor = 5) => {\r\n  if (!camera) return;\r\n\r\n  let _sensibilityWS = sensibilityWS;\r\n  let _sensibilityAD = sensibilityAD;\r\n  // if shift is also pressed, multiply the sensibility by 5\r\n  if (event.shiftKey || event.ctrlKey) {\r\n    _sensibilityWS *= WSFactor;\r\n    _sensibilityAD *= ADFactor;\r\n  }\r\n\r\n  const targetPosition = camera.getFrontPosition(1);\r\n  const currentPositon = camera.position;\r\n\r\n  if (event.key === \"w\" || event.key === \"ArrowUp\" || event.key === 'W') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    camera.target.addInPlace(directionVector.multiplyByFloats(_sensibilityWS, _sensibilityWS, _sensibilityWS));\r\n  }\r\n  if (event.key === \"s\" || event.key === \"ArrowDown\" || event.key === 'S') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    camera.target.subtractInPlace(directionVector.multiplyByFloats(_sensibilityWS, _sensibilityWS, _sensibilityWS));\r\n  }\r\n  if (event.key === \"a\" || event.key === \"ArrowLeft\" || event.key === 'A') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    const rightVector = Vector3.Cross(directionVector, Vector3.Up());\r\n    camera.target.addInPlace(rightVector.multiplyByFloats(_sensibilityAD, _sensibilityAD, _sensibilityAD));\r\n  }\r\n  if (event.key === \"d\" || event.key === \"ArrowRight\" || event.key === 'D') {\r\n    const directionVector = targetPosition.subtract(currentPositon);\r\n    const rightVector = Vector3.Cross(directionVector, Vector3.Up());\r\n    camera.target.subtractInPlace(rightVector.multiplyByFloats(_sensibilityAD, _sensibilityAD, _sensibilityAD));\r\n  }\r\n}\r\n\r\nexport const newHemisphericLight = (scene: Scene, name = \"hemisphericLight\", intensity = 1) => {\r\n  const light = new HemisphericLight(name, Vector3.Up(), scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  light.groundColor.set(0, 0, 0);\r\n  return light;\r\n}\r\n\r\nexport const newDirectionalLight = (scene: Scene, name = \"directionalLight\", direction = Vector3.Up(), intensity = 1) => {\r\n  const light = new DirectionalLight(name, direction, scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  return light;\r\n}\r\n\r\nexport const newPointLight = (scene: Scene, name = \"pointLight\", position = new Vector3(0, 0, 0), intensity = 1) => {\r\n  const light = new PointLight(name, position, scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  return light;\r\n}\r\n\r\n\r\nexport const newSpotLight = (scene: Scene, name = \"spotLight\", position = new Vector3(0, 0, 0), direction = new Vector3(0, -1, 0), angle = Math.PI / 3, exponent = 2, intensity = 1) => {\r\n  const light = new SpotLight(name, position, direction, angle, exponent, scene);\r\n  light.intensity = intensity;\r\n  light.diffuse.set(1, 1, 1);\r\n  light.specular.set(1, 1, 1);\r\n  return light;\r\n}","import * as React from 'react';\r\nimport {useEffect} from 'react';\r\nimport {LightGizmo, PointLight, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {Stack, StackProps} from \"@mui/material\";\r\nimport {newPointLight, str2Color} from \"./3DUtils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport {print} from \"../../../../api/util/Logging\";\r\nimport {MuiColorInput} from \"mui-color-input\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\ntype Props = {\r\n  lightName?: string;\r\n  scene: Scene | undefined;\r\n  updateSignal: boolean;\r\n  initialPosition?: Vector3;\r\n  minX?: number;\r\n  maxX?: number;\r\n  minY?: number;\r\n  maxY?: number;\r\n  minZ?: number;\r\n  maxZ?: number;\r\n  step?: number;\r\n  showControl?: boolean;\r\n} & StackProps;\r\n\r\n\r\nexport const PointLightWithControl = ({\r\n                                        lightName = \"pointLight\",\r\n                                        scene,\r\n                                        updateSignal,\r\n                                        initialPosition = Vector3.Zero(),\r\n                                        minX = -30,\r\n                                        maxX = 30,\r\n                                        minY = -5,\r\n                                        maxY = 30,\r\n                                        minZ = -60,\r\n                                        maxZ = 60,\r\n                                        step = 0.1,\r\n                                        showControl = true,\r\n                                        sx, ...rest\r\n                                      }: Props) => {\r\n\r\n  const lightRef = React.useRef<PointLight>();\r\n  const lightGizmoRef = React.useRef<LightGizmo>();\r\n\r\n  const [showDebug, setShowDebug] = React.useState(false);\r\n  const [intensity, setIntensity] = React.useState(1);\r\n  const minIntensity = 0;\r\n  const maxIntensity = 10;\r\n\r\n  const [color, setColor] = React.useState('#ffffff');\r\n  const [position, setPosition] = React.useState({\r\n    x: initialPosition?.x,\r\n    y: initialPosition?.y,\r\n    z: initialPosition?.z\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!lightGizmoRef.current || !lightRef.current) {\r\n      return;\r\n    }\r\n    print(\"showDebug\", showDebug);\r\n    if (showDebug) {\r\n      lightGizmoRef.current.attachedMesh = lightRef.current as any;\r\n      lightGizmoRef.current.light = lightRef.current;\r\n    } else {\r\n      lightGizmoRef.current.light = null;\r\n      lightGizmoRef.current.attachedMesh = null;\r\n\r\n    }\r\n  }, [showDebug]);\r\n\r\n  useEffect(() => {\r\n    if (!scene) return;\r\n    const light = lightRef.current ? lightRef.current : newPointLight(scene!, lightName, new Vector3(0, 0, 0), 1);\r\n    if (!lightRef.current) {\r\n      lightRef.current = light;\r\n      const lightGizmo = new LightGizmo();\r\n      lightGizmoRef.current = lightGizmo;\r\n\r\n    }\r\n    const lightColor = str2Color(color);\r\n    lightRef.current.range = 100;\r\n    lightRef.current.diffuse = lightColor;\r\n    lightRef.current.specular = lightColor;\r\n    lightRef.current.intensity = intensity;\r\n    lightRef.current.position.x = position.x;\r\n    lightRef.current.position.y = position.y;\r\n    lightRef.current.position.z = position.z;\r\n  }, [color, intensity, lightName, position.x, position.y, position.z, scene, updateSignal]);\r\n\r\n  if (!scene) {\r\n    return <></>;\r\n  }\r\n  return <Stack direction={\"column\"} maxWidth={\"160px\"}\r\n                display={showControl ? \"flex\" : \"none\"}\r\n                onMouseEnter={() => setShowDebug(true)}\r\n                onMouseLeave={() => setShowDebug(false)}\r\n                spacing={1} sx={{...sx}} {...rest}>\r\n    <Typography variant={\"body1\"}>{lightName}</Typography>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color} onChange={setColor}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <LightModeIcon/>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minIntensity}\r\n          max={maxIntensity}\r\n          step={step}\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setIntensity(value as number);\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"X:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minX}\r\n          max={maxX}\r\n          step={step}\r\n          value={position.x}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setPosition({...position, x: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Y:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minY}\r\n          max={maxY}\r\n          step={step}\r\n          value={position.y}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setPosition({...position, y: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Z:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minZ}\r\n          max={maxZ}\r\n          step={step}\r\n          value={position.z}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setPosition({...position, z: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n  </Stack>\r\n};","import * as React from 'react';\r\nimport {useEffect} from 'react';\r\nimport {DirectionalLight, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {Stack, StackProps} from \"@mui/material\";\r\nimport {newDirectionalLight, str2Color} from \"./3DUtils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport {MuiColorInput} from \"mui-color-input\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\ntype Props = {\r\n  lightName?: string;\r\n  scene: Scene | undefined;\r\n  updateSignal: boolean;\r\n  initialDirection?: Vector3;\r\n  minX?: number;\r\n  maxX?: number;\r\n  minY?: number;\r\n  maxY?: number;\r\n  minZ?: number;\r\n  maxZ?: number;\r\n  step?: number;\r\n  showControl?: boolean;\r\n} & StackProps;\r\n\r\n\r\nexport const DirectionalLightWithControl = ({\r\n                                              lightName = \"directionalLight\",\r\n                                              scene,\r\n                                              updateSignal,\r\n                                              initialDirection = Vector3.Zero(),\r\n                                              minX = -Math.PI,\r\n                                              maxX = Math.PI,\r\n                                              minY = -Math.PI,\r\n                                              maxY = Math.PI,\r\n                                              minZ = -Math.PI,\r\n                                              maxZ = Math.PI,\r\n                                              step = 0.01,\r\n                                              showControl = true,\r\n                                              sx, ...rest\r\n                                            }: Props) => {\r\n\r\n  const lightRef = React.useRef<DirectionalLight>();\r\n  // const lightGizmoRef = React.useRef<LightGizmo>();\r\n\r\n  const [showDebug, setShowDebug] = React.useState(false);\r\n  const [intensity, setIntensity] = React.useState(1);\r\n  const minIntensity = 0;\r\n  const maxIntensity = 10;\r\n\r\n  const [color, setColor] = React.useState('#ffffff');\r\n  const [direction, setDirection] = React.useState({\r\n    x: initialDirection?.x,\r\n    y: initialDirection?.y,\r\n    z: initialDirection?.z\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   if (!lightGizmoRef.current || !lightRef.current) {\r\n  //     return;\r\n  //   }\r\n  //   print(\"showDebug\", showDebug);\r\n  //   if (showDebug) {\r\n  //     lightGizmoRef.current.attachedMesh = lightRef.current as any;\r\n  //     lightGizmoRef.current.light = lightRef.current;\r\n  //   } else {\r\n  //     lightGizmoRef.current.light = null;\r\n  //     lightGizmoRef.current.attachedMesh = null;\r\n  //\r\n  //   }\r\n  // }, [showDebug]);\r\n\r\n  useEffect(() => {\r\n    if (!scene) return;\r\n    const light = lightRef.current ? lightRef.current : newDirectionalLight(scene!, lightName, new Vector3(0, 0, 0), 1);\r\n    if (!lightRef.current) {\r\n      lightRef.current = light;\r\n      // lightGizmoRef.current = new LightGizmo();\r\n\r\n    }\r\n    const lightColor = str2Color(color);\r\n    lightRef.current.diffuse = lightColor;\r\n    lightRef.current.specular = lightColor;\r\n    lightRef.current.intensity = intensity;\r\n    lightRef.current.direction.x = direction.x;\r\n    lightRef.current.direction.y = direction.y;\r\n    lightRef.current.direction.z = direction.z;\r\n  }, [color, intensity, lightName, direction.x, direction.y, direction.z, scene, updateSignal]);\r\n\r\n  if (!scene) {\r\n    return <></>;\r\n  }\r\n  return <Stack direction={\"column\"} maxWidth={\"160px\"}\r\n                display={showControl ? \"flex\" : \"none\"}\r\n                onMouseEnter={() => setShowDebug(true)}\r\n                onMouseLeave={() => setShowDebug(false)}\r\n                spacing={1} sx={{...sx}} {...rest}>\r\n    <Typography variant={\"body1\"}>{lightName}</Typography>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color} onChange={setColor}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <LightModeIcon/>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minIntensity}\r\n          max={maxIntensity}\r\n          step={step}\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setIntensity(value as number);\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"X:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minX}\r\n          max={maxX}\r\n          step={step}\r\n          value={direction.x}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setDirection({...direction, x: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Y:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minY}\r\n          max={maxY}\r\n          step={step}\r\n          value={direction.y}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setDirection({...direction, y: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <Typography variant={\"caption\"} enableTranslate={false}>{\"Z:\"}</Typography>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minZ}\r\n          max={maxZ}\r\n          step={step}\r\n          value={direction.z}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setDirection({...direction, z: value as number});\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n  </Stack>\r\n};","import * as React from 'react';\r\nimport {useEffect} from 'react';\r\nimport {HemisphericLight, Scene} from \"@babylonjs/core\";\r\nimport {Stack, StackProps} from \"@mui/material\";\r\nimport {newHemisphericLight, str2Color} from \"./3DUtils\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport {MuiColorInput} from \"mui-color-input\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\ntype Props = {\r\n  lightName?: string;\r\n  scene: Scene | undefined;\r\n  updateSignal: boolean;\r\n  showControl?: boolean;\r\n  step?: number;\r\n  linkEnvironment?: boolean;\r\n  initialIntensity?: number;\r\n} & StackProps;\r\n\r\n\r\nexport const HemisphericLightWithControl = ({\r\n                                              lightName = \"hemisphericLight\",\r\n                                              scene,\r\n                                              updateSignal,\r\n                                              initialIntensity = 1,\r\n                                              showControl = true,\r\n                                              step = 0.1,\r\n                                              linkEnvironment = true,\r\n                                              sx, ...rest\r\n                                            }: Props) => {\r\n\r\n  const lightRef = React.useRef<HemisphericLight>();\r\n\r\n  const [intensity, setIntensity] = React.useState(initialIntensity);\r\n  const minIntensity = 0;\r\n  const maxIntensity = 3;\r\n\r\n  const [color, setColor] = React.useState('#ffffff');\r\n  const [color2, setColor2] = React.useState('#000000');\r\n\r\n\r\n  useEffect(() => {\r\n    if (!scene) return;\r\n    const light = lightRef.current ? lightRef.current : newHemisphericLight(scene!, lightName, intensity);\r\n    if (!lightRef.current) {\r\n      lightRef.current = light;\r\n\r\n    }\r\n    const lightColor = str2Color(color);\r\n    const groundColor = str2Color(color2);\r\n    lightRef.current.diffuse = lightColor;\r\n    lightRef.current.specular = lightColor;\r\n    lightRef.current.intensity = intensity;\r\n    lightRef.current.groundColor = groundColor;\r\n    if (linkEnvironment) {\r\n      scene.environmentIntensity = intensity;\r\n    }\r\n\r\n  }, [color, color2, intensity, lightName, scene, updateSignal]);\r\n\r\n  if (!scene) {\r\n    return <></>;\r\n  }\r\n  return <Stack direction={\"column\"} maxWidth={\"160px\"}\r\n                display={showControl ? \"flex\" : \"none\"}\r\n                spacing={1} sx={{...sx}} {...rest}>\r\n    <Typography variant={\"body1\"}>{lightName}</Typography>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color} onChange={setColor}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <ColorLensIcon/>\r\n      <MuiColorInput\r\n          size={\"small\"}\r\n          margin={\"none\"}\r\n          adornmentPosition={\"end\"}\r\n          sx={{padding: 0}}\r\n          hiddenLabel={true}\r\n          format=\"hex\" value={color2} onChange={setColor2}/>\r\n    </Stack>\r\n    <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n      <LightModeIcon/>\r\n      <Slider\r\n          size=\"small\"\r\n          min={minIntensity}\r\n          max={maxIntensity}\r\n          step={step}\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          onChange={(event, value) => {\r\n            setIntensity(value as number);\r\n          }\r\n          }\r\n      />\r\n    </Stack>\r\n  </Stack>\r\n};","import * as React from 'react';\r\nimport {useCallback} from 'react';\r\nimport {\r\n  Color3,\r\n  HDRCubeTexture,\r\n  loadAssetContainerAsync,\r\n  MeshBuilder,\r\n  MirrorTexture,\r\n  PBRMaterial,\r\n  Plane,\r\n  Scene,\r\n  TransformNode,\r\n  Vector3,\r\n} from \"@babylonjs/core\";\r\nimport BabyLonCanvas from \"./BabyLonCanvas\";\r\nimport Ammo from 'ammojs-typed';\r\n// import Ammo from \"babylonjs-loaders/esm/ammo\";\r\nimport \"babylon-mmd/esm/Loader/pmxLoader\";\r\nimport {isMobile} from \"react-device-detect\";\r\nimport {MmdAmmoJSPlugin, MmdAmmoPhysics, MmdMesh, MmdRuntime, VmdLoader} from \"babylon-mmd\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport {Typography} from \"../../../../component/wrapper/MuiWrappers\";\r\nimport {Stack} from \"@mui/material\";\r\nimport CommentWidget from \"../../../comment/CommentWidget\";\r\nimport {ResourceType} from \"../../../../proto/framework/ResourceMessage\";\r\nimport {getObjectId} from \"../../../../api/util/StringUtil\";\r\nimport {MmdModel} from \"babylon-mmd/esm/Runtime/mmdModel\";\r\nimport {newArcRotateCameraWithControls, newAudioPlayer, WASDCameraControls} from \"./3DUtils\";\r\nimport {PointLightWithControl} from \"./PointLightWithControl\";\r\nimport {DirectionalLightWithControl} from \"./DirectionLightWithControl\";\r\nimport {HemisphericLightWithControl} from \"./HemisphericLightWithControl\";\r\nimport {WebPageContainer} from \"../../../../component/container/WebPageContainer\";\r\n\r\nconst widgetId = getObjectId(301);\r\n\r\nconst BabyLonMmd = () => {\r\n\r\n  const [play, setPlay] = React.useState(false);\r\n  const [updateSingal, setUpdateSignal] = React.useState(false);\r\n\r\n  const sceneRef = React.useRef<Scene>();\r\n  const mmdRuntimeRef = React.useRef<MmdRuntime>();\r\n  // const cameraRef = React.useRef<TargetCamera>();\r\n  // const hemisphericLightRef = React.useRef<HemisphericLight>();\r\n  // const directionalLightRef = React.useRef<DirectionalLight>();\r\n  // const pointLightRef = React.useRef<PointLight>();\r\n  const mmdModelRef = React.useRef<MmdModel>();\r\n  const skyRef = React.useRef<HDRCubeTexture>();\r\n\r\n  // useEffect(() => {\r\n  //   if (!sceneRef.current) {\r\n  //     return;\r\n  //   }\r\n  //   const scene = sceneRef.current;\r\n  //\r\n  //   void debugObject(scene, \"center1\", new Vector3(0, 0, 0), new Color3(0, 0, 0), 1);\r\n  //   void debugObject(scene, \"center2\", new Vector3(0, 10, 0), new Color3(0, 1, 0), 1);\r\n  //   void debugObject(scene, \"center3\", new Vector3(0, 0, 10), new Color3(0, 0, 1), 1);\r\n  //   void debugObject(scene, \"center4\", new Vector3(10, 0, 0), new Color3(1, 0, 0), 1);\r\n  //\r\n  // }, [sceneRef]);\r\n\r\n\r\n  const onSceneReady = useCallback(async (scene: Scene) => {\r\n\r\n\r\n    // scene.clearColor = new Color4(0.95, 0.95, 0.95, 1.0);\r\n    // scene.clearColor = new Color4(0.95, 0.95, 0.95, 0.0);\r\n    // scene.ambientColor = new Color3(0.5, 0.5, 0.5); // mmd scale material ambient color to 0.5. for same result, set ambient color to 0.5\r\n    scene.ambientColor = new Color3(0.5, 0.5, 0.5); // mmd scale material ambient color to 0.5. for same result, set ambient color to 0.5\r\n\r\n    // const camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n    // // This targets the camera to scene origin\r\n    // camera.setTarget(Vector3.Zero());\r\n    const canvas = scene.getEngine().getRenderingCanvas();\r\n    sceneRef.current = scene;\r\n    setUpdateSignal(!updateSingal);\r\n\r\n    const camera = newArcRotateCameraWithControls(scene, canvas, new Vector3(0, 10, 20), \"arcCamera\", new Vector3(0, 10, -20));\r\n    // cameraRef.current = camera;\r\n    window.onkeydown = (event) => {\r\n      WASDCameraControls(camera, event);\r\n    }\r\n\r\n    // const mmdCamera = new MmdCamera(\"mmdCamera\", new Vector3(0, 10, 0), scene);\r\n    // mmdCamera.maxZ = 300;\r\n    // mmdCamera.minZ = 1;\r\n    // mmdCamera.parent = mmdRoot;\r\n    // mmdCamera.attachControl(canvas, true);\r\n    // print(\"mmdCamera\", mmdCamera);\r\n    // scene.activeCamera = mmdCamera;\r\n\r\n    const activeCamera = camera;\r\n    scene.activeCamera = activeCamera;\r\n\r\n\r\n    // const hemisphericLight = newHemisphericLight(scene, \"hemisphericLight\", 0.3);\r\n    // hemisphericLightRef.current = hemisphericLight;\r\n\r\n\r\n    //\r\n    if (!isMobile) {\r\n      const texture = new HDRCubeTexture(\"/mmd/res/ocean_view_balcony_4k.hdr\", scene, 512, false, true, false, true);\r\n      texture.rotationY = Math.PI / 2 * 3;\r\n      // texture.level = 0.7; // intensity\r\n      // scene.environmentTexture = texture;\r\n      skyRef.current = texture;\r\n      const skybox = scene.createDefaultSkybox(texture, true, 1000);\r\n      skybox!.rotation.y = Math.PI / 2 * 3;\r\n    }\r\n\r\n    // const shadowGenerator = new ShadowGenerator(2048 * 2, directionalLight, true, activeCamera);\r\n    // shadowGenerator.transparencyShadow = true;\r\n    // shadowGenerator.bias = 0.01;\r\n\r\n    const ground = MeshBuilder.CreateGround(\"ground1\", {\r\n      width: 120,\r\n      height: 120,\r\n      subdivisions: 2,\r\n      updatable: false\r\n    }, scene);\r\n    ground.receiveShadows = true;\r\n    // ground\r\n    // shadowGenerator.addShadowCaster(ground);\r\n\r\n    const mirrorMaterial = new PBRMaterial(\"mirrorMaterial\", scene);\r\n\r\n    const mirrorTexture = new MirrorTexture(\"mirror\", {ratio: 1.0}, scene, true);\r\n    mirrorTexture.mirrorPlane = new Plane(0, -1, 0, 0);  // Adjust normal direction for correct reflection\r\n    mirrorTexture.renderList = scene.meshes; // Add objects to reflect in the mirror\r\n\r\n\r\n    // Set reflectivity to maximum for a mirror-like surface\r\n    mirrorMaterial.reflectionTexture = mirrorTexture;\r\n    mirrorMaterial.metallic = 1.0;\r\n    mirrorMaterial.roughness = 0.0;\r\n    // mirrorMaterial.reflectionTexture = scene.environmentTexture;\r\n    ground.material = mirrorMaterial;\r\n\r\n\r\n    const vmdLoader = new VmdLoader(scene);\r\n    // const modelMotion = await vmdLoader.loadAsync(\"model_motion_1\", [\r\n    //   \"/mmd/motion/jimingyue-motion.vmd\",\r\n    // ]);\r\n\r\n    // const cameraMotion = await vmdLoader.loadAsync(\"camera_motion_1\",\r\n    //     \"res/メランコリ・ナイト/メランコリ・ナイト_カメラ.vmd\"\r\n    // );\r\n    // camera.addAnimation(cameraMotion);\r\n    // camera.setAnimation(\"camera_motion_1\");\r\n    const [mmdMesh, modelMotion, physicsPlugin] = await Promise.all([\r\n      loadAssetContainerAsync(\"/mmd/原神-刻晴/刻晴fix.pmx\", scene)\r\n      .then((result) => {\r\n        result.addAllToScene();\r\n        return result.meshes[0] as MmdMesh;\r\n      }).catch((e) => {\r\n        console.error(e);\r\n      }),\r\n      vmdLoader.loadAsync(\"model_motion_1\", [\r\n        \"/mmd/motion/jimingyue-motion.vmd\",\r\n      ]),\r\n      Ammo().then((ammo: any) => {\r\n        return new MmdAmmoJSPlugin(true, ammo);\r\n      }).catch((e: any) => {\r\n        console.error(e);\r\n      }),\r\n      // Use HavokPhysics by uncommenting the following code and commenting out the Ammo physics engine.\r\n      // HavokPhysics().then((physicsInstance) => {\r\n      //   return new HavokPlugin(true, physicsInstance);\r\n      // }).catch((e) => {\r\n      //   console.error(e);\r\n      // }),\r\n    ]);\r\n\r\n    if (!mmdMesh || !modelMotion || !physicsPlugin) {\r\n      return;\r\n    }\r\n\r\n\r\n    mmdMesh.renderingGroupId = 1;\r\n\r\n    scene.enablePhysics(new Vector3(0, -9.8, 0), physicsPlugin);\r\n\r\n    // create mmd runtime with physics\r\n    // const mmdRuntime = new MmdRuntime(scene, new MmdPhysics(scene)); // `MmdPhysics` use Havok physics engine for solve rigid body simulation  new MmdPhysics(scene)\r\n    const mmdRuntime = new MmdRuntime(scene, new MmdAmmoPhysics(scene)); // `MmdPhysics` use Ammo physics engine for solve rigid body simulation  new MmdPhysics(scene)\r\n\r\n\r\n    //since Havok is not used by MMD, this may cause some weird behavior on physics simulation.\r\n    mmdRuntimeRef.current = mmdRuntime;\r\n\r\n    mmdRuntime.register(scene);\r\n    void mmdRuntime.setAudioPlayer(newAudioPlayer(scene, \"mmd/music/寄明月.mp3\"));\r\n    // mmdRuntime.setCamera(mmdCamera);\r\n\r\n    // A way to attach the model to a bone\r\n    const mmdRoot = new TransformNode(\"mmdRoot\", scene);\r\n    mmdRoot.position.z = 20;\r\n    mmdMesh.parent = mmdRoot;\r\n\r\n\r\n    for (const mesh of mmdMesh.metadata.meshes) {\r\n      mesh.receiveShadows = true;\r\n    }\r\n    // shadowGenerator.addShadowCaster(mmdMesh);\r\n\r\n    // mmdRuntime.setCamera(mmdCamera);\r\n    const mmdModel = mmdRuntime.createMmdModel(mmdMesh);\r\n    mmdModelRef.current = mmdModel;\r\n    mmdModel.addAnimation(modelMotion);\r\n    mmdModel.setAnimation(\"model_motion_1\");\r\n\r\n\r\n    // make sure directional light follow the model\r\n    // const bodyBone = mmdModel.runtimeBones.find((bone) => bone.name === \"センター\");\r\n    // const boneWorldMatrix = new Matrix();\r\n\r\n    // scene.onBeforeRenderObservable.add(() => {\r\n    //   bodyBone!.getWorldMatrixToRef(boneWorldMatrix).multiplyToRef(mmdMesh.getWorldMatrix(), boneWorldMatrix);\r\n    //   boneWorldMatrix.getTranslationToRef(directionalLight.position);\r\n    //   directionalLight.position.y -= 10;\r\n    // });\r\n\r\n    // create youtube like player control\r\n    // const mmdPlayerControl = new MmdPlayerControl(scene, mmdRuntime, audioPlayer);\r\n    // mmdPlayerControl.showPlayerControl();\r\n\r\n  }, []);\r\n\r\n\r\n  /**\r\n   * Will run on every frame render.\r\n   */\r\n  const onRender = useCallback((scene: Scene) => {\r\n    // if (mmdModelRef.current && mmdRuntimeRef.current && mmdRuntimeRef.current.isAnimationPlaying) {\r\n    //   mmdModelRef.current.runtimeBones.forEach((bone) => {\r\n    //     if (bone.name === \"lcf_5_1\") {\r\n    //       // bone.transformAfterPhysics\r\n    //       print(bone.name, bone.worldMatrix, mmdRuntimeRef.current?.currentFrameTime);\r\n    //     }\r\n    //   });\r\n    // }\r\n\r\n    if (mmdRuntimeRef.current) {\r\n      if (mmdRuntimeRef.current.currentFrameTime >= mmdRuntimeRef.current.animationFrameTimeDuration) {\r\n        // mmdRuntimeRef.current.playAnimation();\r\n        mmdRuntimeRef.current.seekAnimation(0);\r\n        mmdRuntimeRef.current.playAnimation();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return <><BabyLonCanvas antialias onSceneReady={onSceneReady} onRender={onRender} id=\"my-canvas\">\r\n    <Stack direction={\"row\"} justifyContent={\"space-around\"} alignItems={\"flex-start\"}\r\n           sx={{marginX: 2}}>\r\n      <HemisphericLightWithControl scene={sceneRef.current} updateSignal={updateSingal}\r\n                                   initialIntensity={0.7}/>\r\n      <DirectionalLightWithControl scene={sceneRef.current} updateSignal={updateSingal}\r\n                                   initialDirection={new Vector3(0.5, -1, 1)}\r\n      />\r\n      <PointLightWithControl scene={sceneRef.current} updateSignal={updateSingal}\r\n                             initialPosition={new Vector3(3, 15, -10)}/>\r\n    </Stack>\r\n  </BabyLonCanvas>\r\n\r\n    <Fab color=\"primary\" aria-label=\"add\" onClick={() => {\r\n      if (mmdRuntimeRef.current) {\r\n        if (!play) {\r\n          mmdRuntimeRef.current.playAnimation();\r\n        } else {\r\n          mmdRuntimeRef.current.pauseAnimation();\r\n        }\r\n      }\r\n      setPlay(!play);\r\n    }} style={{\r\n      margin: 0,\r\n      left: 20,\r\n      top: 20,\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      position: 'fixed'\r\n    }}>\r\n      {play ? <PauseIcon/> : <PlayArrowIcon/>}\r\n    </Fab>\r\n    <WebPageContainer spacing={2}>\r\n      <Typography>Model BY: miHoYo/观海子, Motion By: Nivsha</Typography>\r\n      <CommentWidget objectId={widgetId} targetType={ResourceType.RESOURCE_TYPE_WEBPAGE}/>\r\n    </WebPageContainer>\r\n  </>\r\n};\r\n\r\nexport default BabyLonMmd;"],"names":["WebPageContainer","_ref","sx","rest","_jsx","Stack","direction","marginTop","marginBottom","marginX","xs","sm","md","lg","xl","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","children","reactCanvas","useRef","useEffect","canvas","current","engine","Engine","setHardwareScalingLevel","window","devicePixelRatio","scene","Scene","isReady","onReadyObservable","addOnce","e","console","error","runRenderLoop","render","resize","getEngine","addEventListener","dispose","log","removeEventListener","_jsxs","_Fragment","ref","style","backgroundColor","height","width","str2Color","str","color","replace","r","parseInt","substring","g","b","Color3","PointLightWithControl","lightName","updateSignal","initialPosition","Vector3","Zero","minX","maxX","minY","maxY","minZ","maxZ","step","showControl","lightRef","React","lightGizmoRef","showDebug","setShowDebug","intensity","setIntensity","setColor","position","setPosition","x","y","z","print","attachedMesh","light","name","arguments","length","undefined","PointLight","diffuse","set","specular","newPointLight","lightGizmo","LightGizmo","lightColor","range","maxWidth","display","onMouseEnter","onMouseLeave","spacing","Typography","variant","alignItems","ColorLensIcon","MuiColorInput","size","margin","adornmentPosition","padding","hiddenLabel","format","value","onChange","LightModeIcon","Slider","min","max","valueLabelDisplay","event","enableTranslate","DirectionalLightWithControl","initialDirection","Math","PI","setDirection","Up","DirectionalLight","newDirectionalLight","HemisphericLightWithControl","initialIntensity","linkEnvironment","color2","setColor2","HemisphericLight","groundColor","newHemisphericLight","environmentIntensity","widgetId","getObjectId","BabyLonMmd","play","setPlay","updateSingal","setUpdateSignal","sceneRef","mmdRuntimeRef","mmdModelRef","skyRef","useCallback","async","ambientColor","getRenderingCanvas","camera","target","radius","subtract","ArcRotateCamera","attachControl","invertRotation","wheelDeltaPercentage","panningSensibility","angularSensibilityX","angularSensibilityY","newArcRotateCameraWithControls","onkeydown","WSFactor","ADFactor","_sensibilityWS","_sensibilityAD","shiftKey","ctrlKey","targetPosition","getFrontPosition","currentPositon","key","directionVector","addInPlace","multiplyByFloats","subtractInPlace","rightVector","Cross","WASDCameraControls","activeCamera","isMobile","texture","HDRCubeTexture","rotationY","createDefaultSkybox","rotation","ground","MeshBuilder","CreateGround","subdivisions","updatable","receiveShadows","mirrorMaterial","PBRMaterial","mirrorTexture","MirrorTexture","ratio","mirrorPlane","Plane","renderList","meshes","reflectionTexture","metallic","roughness","material","vmdLoader","VmdLoader","mmdMesh","modelMotion","physicsPlugin","Promise","all","loadAssetContainerAsync","then","result","addAllToScene","catch","loadAsync","Ammo","ammo","MmdAmmoJSPlugin","renderingGroupId","enablePhysics","mmdRuntime","MmdRuntime","MmdAmmoPhysics","register","setAudioPlayer","newAudioPlayer","path","audioPlayer","StreamAudioPlayer","source","mmdRoot","TransformNode","parent","mesh","metadata","mmdModel","createMmdModel","addAnimation","setAnimation","currentFrameTime","animationFrameTimeDuration","seekAnimation","playAnimation","BabyLonCanvas","id","justifyContent","Fab","onClick","pauseAnimation","left","top","right","bottom","PauseIcon","PlayArrowIcon","CommentWidget","objectId","targetType","ResourceType","RESOURCE_TYPE_WEBPAGE"],"sourceRoot":""}